#textdomain wesnoth-Vaelia_Random_Adventures

# you can call macros using the format {STOOGE_REPLY}

#define VRA_LOOT EASY_AMOUNT NORMAL_AMOUNT HARD_AMOUNT SIDE
    {VRA_VAR amount_gold {EASY_AMOUNT} {NORMAL_AMOUNT} {HARD_AMOUNT}}

    #TODO add message for the other players!
    [message]
        side_for={SIDE}
        speaker=narrator
        message= _ "You retrieve $amount_gold pieces of gold."
        image=wesnoth-icon.png
        sound=gold.ogg
    [/message]

    [gold]
        side={SIDE}
        amount=$amount_gold
    [/gold]
    {CLEAR_VARIABLE amount_gold}
#enddef


#define VRA_AI_SIDE SIDE
	[side]
		side={SIDE}
		controller=ai
		# Place leader, grant gold, income and recruits later
		no_leader=yes
		gold=0
		faction=Custom
		# {NO_INCOME}
		income=0
		# Set ai values later
	[/side]
#enddef

#define VRA_CLEAR_ADJACENT VRA_RADIUS VRA_TERRAIN VRA_SIDE
[store_locations]
	[and]
	[filter]
		#id=Vaelia
		side={VRA_SIDE}
		canrecruit=yes
	[/filter]

	radius={VRA_RADIUS}

	#                [filter_radius]
	#                    terrain=X*
	#                    terrain=C*,K*
	#                [/filter_radius]
	[/and]

	[not]
	[filter]
		side={VRA_SIDE}
		canrecruit=yes
	[/filter]
	[/not]

	[not]
		terrain=C*,K*,U*,Gg,Re
	[/not]

	variable=adjacent_cavewall
[/store_locations]

[foreach]
	array=adjacent_cavewall
	[do]
		[terrain]
			x,y=$this_item.x,$this_item.y
			terrain={VRA_TERRAIN}
		[/terrain]
	[/do]
[/foreach]

{CLEAR_VARIABLE adjacent_cavewall}
#enddef

#define VRA_SIDE_ONE
[side]
	# Scenario sides
	# https://wiki.wesnoth.org/SideWML

	# Starting postion on the map is set inside the map file as "1 Kh"
	# Human player is side 1
	side=1

	# possible values are human or ai
	controller=human

	# id from previous scenario
	save_id=Vaelia

	# internal side leader id value
	id=Vaelia

	# name of the leader
	name= _ "Vaelia"

	# type of leader
	type=Sergeant

	# name is unchangable
	# unrenameable=yes

	# if the leader of this side can recruit
	canrecruit=yes

	faction=Custom
	# types that leader can recruit
	#recruit="Elvish Fighter, My Wesnoth Unit"
	recruit=""

	# starting gold space separated for different difficulties
	gold=0
	{VRA_GAME_INCOME}
	#{INCOME 2 0 -2}
	# {NO_INCOME}

	# internal unseen team names. all sides with the same team_name are allies.
	team_name=VaeliaTeam
	user_team_name= _ "Vaelia Allies"

	{QUANTITY shroud no no yes}
	{QUANTITY fog no yes yes}
	share_vision="none"
[/side]
#enddef

#define VRA_MODIFY_SIDE_ONE
	{VRA_GAME_GOLD}
	[set_variable]
		name=fee
		value=$vra.game_gold
	[/set_variable]
	[store_gold]
		side=1
		variable=gold_store
	[/store_gold]
	[if]
		{VARIABLE_CONDITIONAL fee greater_than $gold_store}
	[then]
		{VARIABLE_OP fee sub $gold_store}
		[gold]
			side=1
			amount=$fee
			#amount="$(min( [20000, ($vra.game_gold * $vra.round) ]))"
		[/gold]
	[/then]
	[/if]
	#{VARIABLE_OP fee sub $vra.round}
	#{VARIABLE_OP fee multiply $vra.round}
	#{VARIABLE_OP fee divide 10}
	#{VARIABLE_OP fee round 0}
	#{VARIABLE_OP fee multiply -1}
	#[gold]
	#	side=1
	#	amount=$fee
	#	#amount="$(min( [20000, ($vra.game_gold * $vra.round) ]))"
	#[/gold]
	{CLEAR_VARIABLE fee}
	{CLEAR_VARIABLE gold_store}
	{CLEAR_VARIABLE vra.game_gold}

#	[modify_side]
#		side=1
#		income="$(min( [{VRA_GAME_INCOME}, ({VRA_GAME_INCOME} + $vra.round) ]))"
#	[/modify_side]
#enddef

#define VRA_NEXT_ENDLEVEL MESSAGE
[switch]
	variable=vra.map
	[case]
		value=Sigurd
		{CLEAR_VARIABLE vra.map}

		{VARIABLE vra.level 5}
		{VRA_URM_FETCH_NEXT_MAP}

		[message]
			speaker=unit
			message={MESSAGE}

			[option]
			label=_"Yes, go to Sigurd's $vra.map|."
			default=yes

			[command]
				[endlevel]
					result=victory
					next_scenario=$vra.next_scenario
					carryover_report=no
					bonus=no
					linger_mode=no
				[/endlevel]
			[/command]
			[/option]

			[option]
			label=_"No, back out."
			[command]
				{VRA_RESTATE_MAP $vra.map}
				[allow_undo]
				[/allow_undo]
				#[break][/break]
			[/command]
			[/option]
		[/message]
		{CLEAR_VARIABLE vra.map}
		{CLEAR_VARIABLE vra.level}
		{CLEAR_VARIABLE vra.next_scenario}
	[/case]
	[case]
		value=Cave
		{CLEAR_VARIABLE vra.map}

		{VARIABLE vra.level 4}
		{VRA_CAVE_FETCH_NEXT_MAP}

		[message]
			speaker=unit
			message={MESSAGE}
			[option]
			label=_"Yes, go to Cave."
			default=yes

			[command]
				[endlevel]
					result=victory
					next_scenario=$vra.next_scenario
					carryover_report=no
					bonus=no
					linger_mode=no
				[/endlevel]
			[/command]
			[/option]

			[option]
			label=_"No, back out."
			[command]
				[allow_undo]
				[/allow_undo]
			[/command]
			[/option]
		[/message]
		{CLEAR_VARIABLE vra.map}
		{CLEAR_VARIABLE vra.level}
		{CLEAR_VARIABLE vra.next_scenario}
	[/case]
	[case]
		value=Plain
		{CLEAR_VARIABLE vra.map}

		{VARIABLE vra.level 2}
		{VRA_PLAIN_FETCH_NEXT_MAP}

		[message]
			speaker=unit
			message={MESSAGE}
			[option]
			label=_"Yes, go to Plain."
			default=yes

			[command]
				[endlevel]
					result=victory
					next_scenario=$vra.next_scenario
					carryover_report=no
					bonus=no
					linger_mode=no
				[/endlevel]
			[/command]
			[/option]

			[option]
			label=_"No, back out."
			[command]
				[allow_undo]
				[/allow_undo]
			[/command]
			[/option]
		[/message]
		{CLEAR_VARIABLE vra.map}
		{CLEAR_VARIABLE vra.level}
		{CLEAR_VARIABLE vra.next_scenario}
	[/case]
	[case]
		value=Marsh
		{CLEAR_VARIABLE vra.map}

		{VARIABLE vra.level 2}
		{VRA_MARSH_FETCH_NEXT_MAP}

		[message]
			speaker=unit
			message={MESSAGE}
			[option]
			label=_"Yes, go to Marsh."
			default=yes

			[command]
				[endlevel]
					result=victory
					next_scenario=$vra.next_scenario
					carryover_report=no
					bonus=no
					linger_mode=no
				[/endlevel]
			[/command]
			[/option]

			[option]
			label=_"No, back out."
			[command]
				[allow_undo]
				[/allow_undo]
			[/command]
			[/option]
		[/message]
		{CLEAR_VARIABLE vra.map}
		{CLEAR_VARIABLE vra.level}
		{CLEAR_VARIABLE vra.next_scenario}
	[/case]
	[case]
		value=Desert
		{CLEAR_VARIABLE vra.map}

		{VARIABLE vra.level 2}
		{VRA_DESERT_FETCH_NEXT_MAP}

		[message]
			speaker=unit
			message={MESSAGE}
			[option]
			label=_"Yes, go to Desert."
			default=yes

			[command]
				[endlevel]
					result=victory
					next_scenario=$vra.next_scenario
					carryover_report=no
					bonus=no
					linger_mode=no
				[/endlevel]
			[/command]
			[/option]

			[option]
			label=_"No, back out."
			[command]
				[allow_undo]
				[/allow_undo]
			[/command]
			[/option]
		[/message]
		{CLEAR_VARIABLE vra.map}
		{CLEAR_VARIABLE vra.level}
		{CLEAR_VARIABLE vra.next_scenario}
	[/case]
	[case]
		value=Winter
		{CLEAR_VARIABLE vra.map}

		{VARIABLE vra.level 2}
		{VRA_WINTER_FETCH_NEXT_MAP}

		[message]
			speaker=unit
			message={MESSAGE}
			[option]
			label=_"Yes, go to Winter."
			default=yes

			[command]
				[endlevel]
					result=victory
					next_scenario=$vra.next_scenario
					carryover_report=no
					bonus=no
					linger_mode=no
				[/endlevel]
			[/command]
			[/option]

			[option]
			label=_"No, back out."
			[command]
				[allow_undo]
				[/allow_undo]
			[/command]
			[/option]
		[/message]
		{CLEAR_VARIABLE vra.map}
		{CLEAR_VARIABLE vra.level}
		{CLEAR_VARIABLE vra.next_scenario}
	[/case]
	[case]
		value=Volcano
		{CLEAR_VARIABLE vra.map}

		[message]
			speaker=unit
			message={MESSAGE}
			[option]
			label=_"Yes, go to Volcano."
			default=yes

			[command]
				{VARIABLE_OP do_cave rand "0..1"}
				[if]
					{VARIABLE_CONDITIONAL do_cave numerical_equals 1}
				[then]
					[endlevel]
						result=victory
						next_scenario=03_vra_VolcanoNorth
						carryover_report=no
						bonus=no
						linger_mode=no
					[/endlevel]
				[/then]
				[else]
					[endlevel]
						result=victory
						next_scenario=03_vra_VolcanoSouth
						carryover_report=no
						bonus=no
						linger_mode=no
					[/endlevel]
				[/else]
				[/if]
				{CLEAR_VARIABLE do_cave}
			[/command]
			[/option]

			[option]
			label=_"No, back out."
			[command]
				[allow_undo]
				[/allow_undo]
			[/command]
			[/option]
		[/message]
		{CLEAR_VARIABLE do_cave}
		{CLEAR_VARIABLE vra.map}
	[/case]
	[case]
		value=Bonus
		{CLEAR_VARIABLE vra.map}

		[modify_side]
			side=1
			fog=no
			shroud=no
		[/modify_side]
		[endlevel]
			result=victory
			next_scenario=01_vra_select
			bonus=yes
			carryover_report=yes
			linger_mode=yes
			reveal_map=yes
		[/endlevel]
	[/case]
	[else]
		{CLEAR_VARIABLE vra.map}

		[modify_side]
			side=1
			fog=no
			shroud=no
		[/modify_side]
		[endlevel]
			result=victory
			next_scenario=01_vra_select
			bonus=no
			carryover_report=yes
			linger_mode=yes
			reveal_map=yes
		[/endlevel]
	[/else]
[/switch]
{CLEAR_VARIABLE vra.map}
{CLEAR_VARIABLE vra.level}
{CLEAR_VARIABLE vra.next_scenario}
#enddef

#define VRA_ENEMIES_DEFEATED
[event]
	name=enemies defeated

	{CLEAR_VARIABLE vra.map}
	{VRA_NEXT_ENDLEVEL _""}
[/event]
#enddef

#define VRA_CLEAR_VARIABLES_VICTORY
[event]
	name=victory

	#[clear_variable]
	#	name=scatter_arr
	#[/clear_variable]

	{CLEAR_VARIABLE scatter_arr.locs}
	{CLEAR_VARIABLE scatter_arr}
[/event]
#enddef

#define VRA_CLEAR_VARIABLES_DEFEAT
[event]
	name=defeat

	{VRA_CLEAR_VARIABLES}
[/event]
#enddef

#define VRA_CLEAR_VARIABLES
{CLEAR_VARIABLE debbie.terra}
{CLEAR_VARIABLE debbie}

{CLEAR_VARIABLE scatter_arr.locs}
{CLEAR_VARIABLE scatter_arr}

{CLEAR_VARIABLE lava_body.edge}
{CLEAR_VARIABLE lava_body}
{CLEAR_VARIABLE lava_count}

{CLEAR_VARIABLE vra.round}
{CLEAR_VARIABLE vra.map}
{CLEAR_VARIABLE vra.enemy}
{CLEAR_VARIABLE vra.level}
{CLEAR_VARIABLE vra.next_scenario}

{CLEAR_VARIABLE vra.enemy_choice}
{CLEAR_VARIABLE vra.cave_map_choice}
{CLEAR_VARIABLE vra.desert_map_choice}
{CLEAR_VARIABLE vra.winter_map_choice}
{CLEAR_VARIABLE vra.plain_map_choice}
{CLEAR_VARIABLE vra.marsh_map_choice}
{CLEAR_VARIABLE vra.urm_map_choice}

{CLEAR_VARIABLE vra.is_recruit_set}
{CLEAR_VARIABLE vra.vaelia_recruit}
{CLEAR_VARIABLE vra.possible_recruit}

{CLEAR_VARIABLE vra.vaelia_demote1_type}
{CLEAR_VARIABLE vra.vaelia_demote1_type1}

{CLEAR_VARIABLE vra.vaelia_demote2_type}
{CLEAR_VARIABLE vra.vaelia_demote2_type1}
{CLEAR_VARIABLE vra.vaelia_demote2_type2}

{CLEAR_VARIABLE vra.vaelia_demote3_type}
{CLEAR_VARIABLE vra.vaelia_demote3_type1}
{CLEAR_VARIABLE vra.vaelia_demote3_type2}
{CLEAR_VARIABLE vra.vaelia_demote3_type3}

{CLEAR_VARIABLE vra}

{CLEAR_VARIABLE dialog.start}
{CLEAR_VARIABLE dialog.last_breath}
{CLEAR_VARIABLE dialog.victory}
{CLEAR_VARIABLE dialog}
#enddef

#define VRA_ROUND_COUNTER
{VARIABLE_OP vra.round add 1}
#enddef

#define VRA_OBJECTIVES
# Game objectives in red and green
[objectives]
	side=1
	#delayed_variable_substitution=yes #so vra.round note works correctly when using debug
	# objective condition have 2 values either win or lose.
	[objective]
		condition=win
		description= _ "Defeat enemy leader(s)"
	[/objective]

	[objective]
		condition=win
		description= _ "Resist until turns run out"
		show_turn_counter=yes
	[/objective]

	[objective]
		condition=lose
		description= _ "Death of Vaelia"
		[show_if]
			{VARIABLE_CONDITIONAL vra.round less_than_equal_to 8}
		[/show_if]
	[/objective]

	[objective]
		{ALTERNATIVE_OBJECTIVE_CAPTION}
		condition=win
		description= _ "Death of Vaelia"
		[show_if]
			{VARIABLE_CONDITIONAL vra.round greater_than_equal_to 9}
		[/show_if]
	[/objective]

	[gold_carryover]
		{VRA_GAME_CARRY_OVER}
		bonus=no
	[/gold_carryover]

	[note]
		description="<b>" + _ "Round $vra.round|." + "</b>"
	[/note]

	#{HAS_NO_TURN_LIMIT}
	#{TURNS_RUN_OUT}

	# No {IS_LAST_SCENARIO}, because the player can win and keep on playing
[/objectives]
#enddef

#define VRA_FACTION_CASE VRA_SIDE_LEADER VRA_SIDE_NUMBER
	[case]
	value={VRA_SIDE_LEADER}

	{VARIABLE list ({VRA_RECRUIT_{VRA_SIDE_LEADER}})}
	[set_variables]
		name=enemy_recruit_leader_arr
		mode=replace
		[split]
			list=$list
			key=type
			separator=,
			remove_empty=yes
		[/split]
	[/set_variables]
	{CLEAR_VARIABLE list}

	[set_variable]
		name=enemy_leader
		[join]
			variable=enemy_recruit_leader_arr
			key=type
			separator=,
			remove_empty=yes
		[/join]
	[/set_variable]
	{VARIABLE_OP enemy_recruit_leader rand $enemy_leader}
	{CLEAR_VARIABLE enemy_leader}
	{CLEAR_VARIABLE enemy_recruit_leader_arr}

#ifdef ENABLE_LEVELUP_LEADER
	[store_unit_type]
		type=$enemy_recruit_leader
		variable=enemy_leader
	[/store_unit_type]
	[if]
		{VARIABLE_CONDITIONAL enemy_leader.advances_to not_equals null}
		[then]
			{CLEAR_VARIABLE enemy_recruit_leader}
			{VARIABLE_OP enemy_recruit_leader rand $enemy_leader.advances_to}
		[/then]
	[/if]
	{CLEAR_VARIABLE enemy_leader}
#endif

	[unit]
		side={VRA_SIDE_NUMBER}
		type=$enemy_recruit_leader
		id={VRA_SIDE_LEADER}{VRA_SIDE_NUMBER}
		name="{VRA_SIDE_LEADER}"
		#generate_name=yes
		random_traits=yes
		random_gender=yes
		location_id={VRA_SIDE_NUMBER}
		canrecruit=yes
		facing=sw
	[/unit]
	{CLEAR_VARIABLE enemy_recruit_leader}

	#Calculate Cost
	{VARIABLE list ({VRA_RECRUIT_{VRA_SIDE_LEADER}})}
	[set_variables]
		name=enemy_recruit_types_arr
		mode=replace
		[split]
			list=$list
			key=type
			separator=,
			remove_empty=yes
		[/split]
	[/set_variables]
	{CLEAR_VARIABLE list}
	#Add units to side recall,recall and set enemy_gold, enemy_recruit_cost variables
	[set_variable]
		name=enemy_gold
		value=0
	[/set_variable]
	[set_variable]
		name=enemy_recruit_cost
		value=0
	[/set_variable]
	[foreach]
		array=enemy_recruit_types_arr
		[do]
		[if]
		        {VARIABLE_CONDITIONAL this_item.type not_equals $null}
		[then]
			[store_unit_type]
				type=$this_item.type
				variable=enemy_type
			[/store_unit_type]
			{VARIABLE_OP enemy_recruit_cost add $enemy_type.cost}
			# doesn't always recall
			[unit]
				side={VRA_SIDE_NUMBER}
				type=$this_item.type
				#type=$enemy_type.id
				x,y=recall,recall
				generate_name=yes
				random_gender=yes
				random_traits=no
				[modifications]
					{TRAIT_LOYAL}
				[/modifications]
				{IS_LOYAL}
			[/unit]
			{CLEAR_VARIABLE enemy_type}
		[/then]
		[/if]
		[/do]
	[/foreach]
	[if]
		{VARIABLE_CONDITIONAL enemy_recruit_types_arr.length greater_than 0}
	[then]
		{VARIABLE_OP enemy_recruit_cost divide $enemy_recruit_types_arr.length}
		{VARIABLE_OP enemy_recruit_cost round 0}
		{VARIABLE_OP enemy_gold add $enemy_recruit_cost}
#ifdef HARD
		{VARIABLE_OP enemy_gold multiply 15}
#endif
#ifdef NORMAL
		{VARIABLE_OP enemy_gold multiply 12}
#endif
#ifdef EASY
		{VARIABLE_OP enemy_gold multiply 9}
#endif
	[/then]
	[/if]

	[set_variable]
		name=enemy_recruit_types
		[join]
			variable=enemy_recruit_types_arr
			key=type
			separator=,
			remove_empty=yes
		[/join]
	[/set_variable]
	{CLEAR_VARIABLE enemy_recruit_types_arr}

	[modify_side]
		side={VRA_SIDE_NUMBER}
		side_name={VRA_SIDE_LEADER}
		team_name={VRA_SIDE_LEADER}{VRA_SIDE_NUMBER}
		user_team_name= _ "{VRA_SIDE_LEADER}{VRA_SIDE_NUMBER}"
		recruit=$enemy_recruit_types
		fog=yes
		share_vision="none"
		#scroll_to_leader=no
		#shroud=yes
		# {FLAG_VARIANT knalgan}
		# {FLAG_VARIANT loyalist}
		# {FLAG_VARIANT wood-elvish}
		# {FLAG_VARIANT6 ragged}
	[/modify_side]
	{CLEAR_VARIABLE enemy_recruit_types}

	[modify_side]
		side={VRA_SIDE_NUMBER}

		gold=$enemy_gold
		{VRA_GAME_ENEMY_INCOME}
		# this did not work :(
		# recall_cost=$enemy_recruit_cost

		#gold="$(min( [250, ($vra.game_gold * $vra.round) ]))"
		#income="$(min( [{VRA_GAME_INCOME}, ({VRA_GAME_INCOME} + $vra.round) ]))"

		[ai]
#ifdef ENABLE_EXP_AI
			ai_algorithm=experimental_ai
#endif
			# aggression="$(min( [1.0, (0.3 + 0.1 * $vra.round) ] ) )"
			# villages_per_scout=8
			# village_value=1
			# leader_value=1
			# attack_depth=5
			# recruitment_randomness=50 #(int) A random value between 0 and recruitment_randomness is added to each score. Use a high value, such as '200', to increase randomness.
			recruitment_diversity=5.0 #2.0 (double) When this value is high, the AI recruits more units which are currently rare on the map. When the value is 0.0, the AI only recruits the best unit. set to 3.0 in Secrets_of_the_Ancients/scenarios/10_Merfolk_Revenge.cfg

#ifdef AVOID_KEEP
			[avoid]
				x,y=24-26,24-26
			[/avoid]
#endif

#ifdef AVOID_LAVA
			[avoid]
				terrain=Mv,Qxu,Ql
			[/avoid]
#endif

#ifdef AVOID_KEEP_LAVA
			[avoid]
				x,y=24-26,24-26
				[or]
					terrain=Mv,Qxu,Ql
				[/or]
			[/avoid]
#endif
		[aspect]
		id=recruitment_instructions
		[facet]
			[value]
#				[recruit]
#					type=
#					number=12
#					total=yes
#					blocker=no
#				[/recruit]
				[limit]
					type=    #empty type means all units
#ifdef HARD
					max=15
#endif
#ifdef NORMAL
					max=12
#endif
#ifdef EASY
					max=9
#endif
				[/limit]
				[recruit]         #Do not forget to include the default
					importance=0    #[recruit]-tag. Otherwise the AI won't
				[/recruit]        #recruit anything.
			[/value]
		[/facet]
		[/aspect]
		[/ai]
	[/modify_side]
	{CLEAR_VARIABLE enemy_gold}
	{CLEAR_VARIABLE enemy_recruit_cost}
	[/case]
#enddef

#define VRA_SETUP_SIDE  VRA_SIDE_NUMBER
	{VRA_RC_CHOOSE_ENEMY}

	[switch]
		variable=vra.enemy

	{VRA_ENEMY_CASE {VRA_SIDE_NUMBER}}
	[/switch]

	{CLEAR_VARIABLE vra.enemy}
#enddef

#define VRA_SWITCH_ALLIANCE VRA_SIDE_NUMBER
	[modify_side]
		side={VRA_SIDE_NUMBER}
		team_name=VaeliaTeam
		user_team_name= _ "Vaelia Allies"
	[/modify_side]
#enddef

#define VRA_TIMES_UP
	[event]
		# Spaces in event names can be interchanged with underscores.
		# triggered when you run out of turns.
		name=time over
		[message]
			speaker=Vaelia
			message= _ "Fallback and regroup..."
		[/message]
		{CLEAR_VARIABLE vra.map}
		{VRA_NEXT_ENDLEVEL _""}
	[/event]
#enddef

#define VRA_HERO_DIE
	[event]
		name=die
		[filter]
			id=Vaelia
		[/filter]

		[if]
			{VARIABLE_CONDITIONAL vra.round greater_than_equal_to 9}
			[then]
				[endlevel]
					next_scenario=null
					carryover_report=no
					bonus=no
					save=no
					linger_mode=no
				[/endlevel]
				{VRA_CLEAR_VARIABLES}
			[/then]

			# Normal defeat condition before sufficient repetitions
			[else]
				[endlevel]
					result=defeat
				[/endlevel]
			[/else]
		[/if]
	[/event]
#enddef

#define VRA_SPEECH_EVENTS
[event]
	name=last breath
	first_time_only=no
	[filter]
		[not]
		side=1
		[/not]
		canrecruit=no
	[/filter]
	[filter_second]
		side=1
	[/filter_second]

#	[gold]
#		side=1
#		amount=$unit.cost
#	[/gold]

	{VRA_GAME_SURRENDER_PERCENT}
	{VARIABLE check_level $unit.level}
	[if]
		{VARIABLE_CONDITIONAL check_level less_than_equal_to 1}
	[then]
		{VARIABLE_OP do_surrender rand "1..100"}
		[if]
			{VARIABLE_CONDITIONAL do_surrender less_than_equal_to $vra.game_surrender_percent}
		[then]
			[message]
				speaker=second_unit
				message= _ "Give in!"
			[/message]
			[message]
				speaker=unit
				message= _ "I yield!"
			[/message]
			[store_unit]
				[filter]
					id=$unit.id
				[/filter]
				variable=side_store
			[/store_unit]
			[kill]
				id=$side_store.id
				animate=no
				fire_event=no
			[/kill]
			# {LOYAL_UNIT 1 (Elvish Fighter) 19 16}
			# {NAMED_LOYAL_UNIT 1 (Elvish Fighter) 19 16 (Myname) ( _ "Myname")}
			[unit]
				type=$side_store.type
				side=1
				x = $side_store.x
				y = $side_store.y
				facing = $side_store.facing
				name=$side_store.name
				#generate_name=yes
				gender=$side_store.gender
				#random_gender=yes
				#random_traits=yes
				random_traits=no
				# upkeep=loyal
				# upkeep=full
				moves=0
				attacks_left=0
#ifdef HARD
				hitpoints=1
#endif
				[modifications]
					{TRAIT_LOYAL}
				[/modifications]
				{IS_LOYAL}
			[/unit]
			{CLEAR_VARIABLE side_store}
		[/then]
		[/if]
		{CLEAR_VARIABLE do_surrender}
	[/then]
	[/if]
	{CLEAR_VARIABLE check_level}
	{CLEAR_VARIABLE vra.game_surrender_percent}

[/event]

[event]
	name=die
	first_time_only=no
	[filter]
		[not]
		side=1
		[/not]
		canrecruit=no
	[/filter]
	[filter_second]
		side=1
	[/filter_second]
	[gold]
		side=1
		amount=$unit.cost
	[/gold]

	[floating_text]
		[filter]
			id=$second_unit.id
		[/filter]
		text= _ "+$unit.cost|"
	[/floating_text]
[/event]

[event]
	name=start

	[store_side]
		team_name=GangTeam
		variable=temp_enemies
	[/store_side]

	[if]
		{VARIABLE_CONDITIONAL temp_enemies.length greater_than 1}
	[then]
		[message]
			side=1
			[and]
				canrecruit=yes
			[/and]
			message=_"They allied themselves against us!"
		[/message]
	[/then]
	[/if]
	{CLEAR_VARIABLE temp_enemies}

	[store_unit]
		[filter]
			[not]
				side=1
			[/not]
			[and]
				canrecruit=yes
			[/and]
			[and]
				[filter_side]
					#team_name=VaeliaTeam
					[allied_with]
						side=1
					[/allied_with]
					#[has_ally]
					#	side=1
					#[/has_ally]
				[/filter_side]
			[/and]
		[/filter]
		variable=temp_ally
	[/store_unit]

	[if]
		{VARIABLE_CONDITIONAL temp_ally.length greater_than 0}
	[then]
		[message]
			speaker=$temp_ally.id
			message= _ "We stand with you till the end!"
		[/message]

		[message]
			side=1
			[and]
				canrecruit=yes
			[/and]
			message=_"Aye, to the bitter end!"
		[/message]
	[/then]
	[/if]
	{CLEAR_VARIABLE temp_ally}

	[store_unit]
	[filter]
		canrecruit=yes
		[filter_side]
			[enemy_of]
				side=1
			[/enemy_of]
		[/filter_side]
	[/filter]
	variable=store_enemies
	[/store_unit]

	[foreach]
		array=store_enemies
		[do]
		{VRA_RC_RANDOM_MESSAGE start}
		[message]
			speaker=$this_item.id
			message=$dialog.start[$random].message
		[/message]
		{CLEAR_VARIABLE dialog.start[$random].message,random}
		[/do]
	[/foreach]
	{CLEAR_VARIABLE store_enemies}
[/event]

[event]
	name=last breath
	first_time_only=no

	[filter]
		[not]
			side=1
		[/not]
		[and]
			canrecruit=yes
		[/and]
		[and]
			[filter_side]
				#team_name=VaeliaTeam
				[allied_with]
					side=1
				[/allied_with]
				#[has_ally]
				#	side=1
				#[/has_ally]
			[/filter_side]
		[/and]
	[/filter]

	[if]
		{VARIABLE_CONDITIONAL unit.id equals $second_unit.id}
	[then]
		[message]
			speaker=unit
			message= _ "Goodbye, cruel world."
		[/message]
	[/then]
	[else]
	[message]
		speaker=unit
		message= _ "Gah! Avenge me Vaelia."
	[/message]
	[message]
		speaker=second_unit
		message= _ "We'll get to Vaelia, soon enough."
	[/message]
	[/else]
	[/if]
[/event]

[event]
	name=last breath
	first_time_only=no

	[filter]
		side=1
		[and]
			canrecruit=no
		[/and]
	[/filter]

	[if]
		{VARIABLE_CONDITIONAL unit.id equals $second_unit.id}
	[then]
		[message]
			speaker=unit
			message= _ "The ground beneath me has given way."
		[/message]
	[/then]
	[/if]
[/event]

[event]
	name=moveto
	first_time_only=yes
	[filter]
		[not]
			side=1
		[/not]
		[and]
			canrecruit=no
		[/and]
		[and]
			[filter_side]
				#team_name=VaeliaTeam
				[allied_with]
					side=1
				[/allied_with]
				#[has_ally]
				#	side=1
				#[/has_ally]
			[/filter_side]
		[/and]
		[and]
			[filter_vision]
				side=1
			[/filter_vision]
		[/and]
	[/filter]

	[message]
		speaker=unit
		message=_"We've got this flank covered"
	[/message]
[/event]

[event]
	name=last_breath
	first_time_only=no

	[filter]
		canrecruit=yes
		[filter_side]
			[enemy_of]
				side=1
			[/enemy_of]
		[/filter_side]
	[/filter]

	[if]
		{VARIABLE_CONDITIONAL unit.id equals $second_unit.id}
	[then]
		[message]
			speaker=unit
			message= _ "Goodbye, cruel world."
		[/message]
	[/then]
	[else]
        {VRA_RC_RANDOM_MESSAGE last_breath}
	[message]
		speaker=second_unit
		message= _ "Die villain!"
	[/message]
	[message]
		speaker=$unit.id
		message=$dialog.last_breath[$random].message
	[/message]
	{CLEAR_VARIABLE dialog.last_breath[$random].message,random}
	[/else]
	[/if]
[/event]

#ifdef AVOID_KEEP
[event]
	name=moveto
	first_time_only=yes
	[filter]
		side=1
		x,y=25,25
	[/filter]
	[message]
		speaker=unit
		message= _ "This is sanctuary, I will be safe here."
	[/message]
[/event]
#endif

#ifdef AVOID_KEEP_LAVA
[event]
	name=moveto
	first_time_only=yes
	[filter]
		side=1
		x,y=25,25
	[/filter]
	[message]
		speaker=unit
		message= _ "This is sanctuary, I will be safe here."
	[/message]
[/event]
#endif
#enddef

#define VRA_PICKUPPABLE_ITEM ID X Y CAN_TAKE_FILTER_WML IMAGE TEXT TAKE_IT_STRING LEAVE_IT_STRING CANNOT_TAKE_TEXT OBJECT_WML
    # This places an item on the map which can be picked up once, but allows the
    # player to choose whether the unit stepping on it should take it or not.
    # The "object" doesn't necessarily need to be an [object], any action works.
    #
    # An example which shows the:
    # ! {PICKUPPABLE_ITEM ring_of_hp 8 12 race=human items/ring-red.png
    # !     _"$unit.name finds a pretty ring. Should he pick it up?"
    # !     _"ring of HP^Take it"
    # !     _"ring of HP^Leave it"
    # !     _"$unit.name finds a pretty ring. But only a human can take it!" (
    # !     [object]
    # !         name= _ "Ring of HP"
    # !         image=items/ring-red.png
    # !         description= _ "This ring grants the wearer +10 max hp!"
    # !
    # !         [effect]
    # !             apply_to=hitpoints
    # !             increase_total=10
    # !         [/effect]
    # !     [/object]
    # ! )}

    [item]
        x,y={X},{Y}
        image={IMAGE}
        visible_in_fog=no
    [/item]

    #[label]
    #    x,y={X},{Y}
    #    text={ID}
    #    visible_in_fog=no
    #[/label]

    [event]
        name=moveto
        first_time_only=no

        [filter]
            x,y={X},{Y}
        [/filter]

        [if]
            [have_unit]
                x,y={X},{Y}
                {CAN_TAKE_FILTER_WML}
            [/have_unit]

            [variable]
                name=item_{ID}_picked_up
                not_equals=yes
            [/variable]

            [then]
                [message]
                    speaker=narrator
                    message={TEXT}
                    image={IMAGE}

                    [option]
                        label={TAKE_IT_STRING}

                        [command]
                            {OBJECT_WML}

                            [remove_item]
                                x,y={X},{Y}
                                image={IMAGE}
                            [/remove_item]

                            [set_variable]
                                name=item_{ID}_picked_up
                                value=yes
                            [/set_variable]
                        [/command]
                    [/option]

                    [option]
                        label={LEAVE_IT_STRING}

                        [command]
                            [allow_undo]
                            [/allow_undo]
                        [/command]
                    [/option]
                [/message]
            [/then]

            [else]
                [if]
                    [variable]
                        name=item_{ID}_picked_up
                        not_equals=yes
                    [/variable]

                    [then]
                        [message]
                            speaker=narrator
                            message={CANNOT_TAKE_TEXT}
                            image={IMAGE}
                            side_for=$side_number
                            # the above is used to prevent an AI side from
                            # accidentally triggering this dialog
                        [/message]
                    [/then]
                [/if]

                [allow_undo]
                [/allow_undo]
            [/else]
        [/if]
    [/event]

    [event]
        name=victory

        [clear_variable]
            name=item_{ID}_picked_up
        [/clear_variable]
    [/event]
#enddef

#define VRA_OBJ_CHEST_GOLD X Y ID
    {VRA_PICKUPPABLE_ITEM {ID} {X} {Y} (
	side=1
	) items/chest.png
    _"You found a chest!"
    _"chest^Open it"
    _"chest^Leave it"
    _"$unit.name has no need for this chest! Let another open it." (
        [sound]
          name=open-chest.wav
        [/sound]
        {VRA_LOOT 20 15 10 1}
        {PLACE_IMAGE (items/chest-open.png) {X} {Y}}
    )}
#enddef

#define VRA_OBJ_PLAIN_GOLD X Y ID
    {VRA_PICKUPPABLE_ITEM {ID} {X} {Y} (
	side=1
	) items/chest-plain-closed.png
    _"You found a plain chest!"
    _"plain chest^Open it"
    _"plain chest^Leave it"
    _"$unit.name has no need for this plain chest! Let another open it." (
        [sound]
          name=open-chest.wav
        [/sound]
        {VRA_LOOT 15 10 5 1}
        {PLACE_IMAGE (items/chest-plain-open.png) {X} {Y}}
    )}
#enddef

#define VRA_POT_EFFECT
#ifndef HARD
            [effect]
                apply_to=attack
                range=melee
#ifdef NORMAL
                increase_damage=1
#endif
#ifdef EASY
                increase_damage=2
#endif
                #increase_accuracy=1
            [/effect]
            [effect]
                apply_to=attack
                range=ranged
#ifdef NORMAL
                increase_damage=1
#endif
#ifdef EASY
                increase_damage=2
#endif
                #increase_accuracy=1
            [/effect]
            [effect]
                apply_to=hitpoints
                #increase_total=2
                heal_full=yes
            [/effect]
            #[effect]
            #    apply_to=movement
            #    increase=2
            #[/effect]
#endif
            [effect]
                apply_to=new_ability
                [abilities]
			[dummy] # ability type
				id=potion # ability
				name= _ "potion"
				female_name= _ "female^potion"
				description=_ "This unit is using a potion."
			[/dummy]
                [/abilities]
            [/effect]
#enddef

#define VRA_OBJ_POTION_HOLY X Y ID
    {VRA_PICKUPPABLE_ITEM {ID} {X} {Y} (
        side=1
	[not]
		ability=potion
	[/not]
	[not]
        [has_attack]
            type=arcane
        [/has_attack]
	[/not]
    ) items/holy-water.png
    _"Sprinkling this water on melee and ranged weapons grants them the <i>arcane</i> damage type until the end of the current scenario. Should $unit.name use it?"
    _"holy water^Take it"
    _"holy water^Leave it"
    _"$unit.name has no need for this Holy Water! Let another take it." (
        [object]
            name= _ "Holy Water"
            image=items/holy-water.png
            duration=scenario
            description= _ "This water will make melee and ranged weapons have the <i>arcane</i> damage type until the end of the current scenario."
            [effect]
                apply_to=attack
                range=melee
                set_type=arcane
            [/effect]
            [effect]
                apply_to=attack
                range=ranged
                set_type=arcane
            [/effect]
            {VRA_POT_EFFECT}
            #[effect]
            #	apply_to=overlay
            #	add="misc/holy-water-overlay.png"
            #[/effect]
        [/object]
	[unit_overlay]
		x={X}
		y={Y}
		ability=potion
		image=misc/holy-water-overlay.png
		object_id={ID}
	[/unit_overlay]
        [sound]
            name={SOUND_LIST:HOLY}
        [/sound]
    )}
#enddef

#define VRA_OBJ_POTION_FIRE X Y ID
    {VRA_PICKUPPABLE_ITEM {ID} {X} {Y} (
        side=1
	[not]
		ability=potion
	[/not]
	[not]
        [has_attack]
            type=fire
        [/has_attack]
	[/not]
    ) items/potion-red.png
    _"Sprinkling this potion on melee and ranged weapons grants them the <i>fire</i> damage type until the end of the current scenario. Should $unit.name use it?"
    _"potion of fire^Take it"
    _"potion of fire^Leave it"
    _"$unit.name has no need for this Potion of Fire! Let another take it." (
        [object]
            name= _ "Potion of Fire"
            image=items/potion-red.png
            duration=scenario
            description= _ "This potion will make melee and ranged weapons have the <i>fire</i> damage type until the end of the current scenario."
            [effect]
                apply_to=attack
                range=melee
                set_type=fire
            [/effect]
            [effect]
                apply_to=attack
                range=ranged
                set_type=fire
            [/effect]
            {VRA_POT_EFFECT}
            #[effect]
            #	apply_to=overlay
            #	add="misc/potion-red-overlay.png"
            #[/effect]
        [/object]
	[unit_overlay]
		x={X}
		y={Y}
		ability=potion
		image=misc/potion-red-overlay.png
		object_id={ID}
	[/unit_overlay]
        [sound]
            name=potion.ogg
        [/sound]
    )}
#enddef

#define VRA_OBJ_POTION_COLD X Y ID
    {VRA_PICKUPPABLE_ITEM {ID} {X} {Y} (
        side=1
	[not]
		ability=potion
	[/not]
	[not]
        [has_attack]
            type=cold
        [/has_attack]
	[/not]
    ) items/potion-blue.png
    _"Sprinkling this potion on melee and ranged weapons grants them the <i>cold</i> damage type until the end of the current scenario. Should $unit.name use it?"
    _"potion of cold^Take it"
    _"potion of cold^Leave it"
    _"$unit.name has no need for this Potion of Cold! Let another take it." (
        [object]
            name= _ "Potion of Cold"
            image=items/potion-blue.png
            duration=scenario
            description= _ "This potion will make melee and ranged weapons have the <i>cold</i> damage type until the end of the current scenario."
            [effect]
                apply_to=attack
                range=melee
                set_type=cold
            [/effect]
            [effect]
                apply_to=attack
                range=ranged
                set_type=cold
            [/effect]
            {VRA_POT_EFFECT}
            #[effect]
            #	apply_to=overlay
            #	add="misc/potion-blue-overlay.png"
            #[/effect]
        [/object]
	[unit_overlay]
		x={X}
		y={Y}
		ability=potion
		image=misc/potion-blue-overlay.png
		object_id={ID}
	[/unit_overlay]
        [sound]
            name=potion.ogg
        [/sound]
    )}
#enddef

#define VRA_OBJ_POTION_REGN X Y ID
    {VRA_PICKUPPABLE_ITEM {ID} {X} {Y} (
	side=1
	[not]
		ability=potion
		#ability_type=potion
	[/not]
	[not]
		ability=regenerates
		#ability_type=regenerate
	[/not]
	) items/potion-green.png
    _"Drinking this potion will rejuvinate you!"
    _"potion of rejuvinate^Drink it"
    _"potion of rejuvinate^Leave it"
    _"$unit.name has no need for this Potion of Rejuvination! Let another take it." (
        [object]
            name= _ "Potion of Rejuvination"
            image=items/potion-green.png
            duration=scenario
            description= _ "You feel rejuvinated."
            [effect]
                apply_to=new_ability
                [abilities]
                    {ABILITY_REGENERATES}
                [/abilities]
            [/effect]
            {VRA_POT_EFFECT}
            #[effect]
            #   apply_to=overlay
            #   add="misc/potion-green-overlay.png"
            #[/effect]
        [/object]
	[unit_overlay]
		x={X}
		y={Y}
		ability=potion
		image=misc/potion-green-overlay.png
		object_id={ID}
	[/unit_overlay]
        [sound]
            name=potion.ogg
        [/sound]
    )}
#enddef

#define VRA_REMOVE_OBJECT OID
	[remove_object]
		object_id={OID}
	[/remove_object]
#enddef

#define SCENE_OBJECTS

# delayed_variable_substitution=yes

{VRA_GET_SCATTER_LOCS (Gg,Gs,Gd,Hh,Hhd,Hd,Ha,Uh,Wwg,Ww,Wwt,Wwf,Uu,Uue,Aa,Ai,Dd,Ds,Rb,Re,Rd,Rr,Rrc,Rp,Ur,Ss,Sm) 2 30}

{VRA_OBJ_CHEST_GOLD  $scatter_arr.locs[0].x $scatter_arr.locs[0].y obj_loc_0}
{VRA_OBJ_PLAIN_GOLD  $scatter_arr.locs[1].x $scatter_arr.locs[1].y obj_loc_1}
{VRA_OBJ_POTION_REGN $scatter_arr.locs[2].x $scatter_arr.locs[2].y obj_loc_2}
{VRA_OBJ_POTION_FIRE $scatter_arr.locs[3].x $scatter_arr.locs[3].y obj_loc_3}
{VRA_OBJ_POTION_COLD $scatter_arr.locs[4].x $scatter_arr.locs[4].y obj_loc_4}
{VRA_OBJ_POTION_HOLY $scatter_arr.locs[5].x $scatter_arr.locs[5].y obj_loc_5}

#ifndef HARD
{VRA_OBJ_CHEST_GOLD  $scatter_arr.locs[6].x $scatter_arr.locs[6].y obj_loc_6}
{VRA_OBJ_PLAIN_GOLD  $scatter_arr.locs[7].x $scatter_arr.locs[7].y obj_loc_7}
{VRA_OBJ_POTION_REGN $scatter_arr.locs[8].x $scatter_arr.locs[8].y obj_loc_8}
{VRA_OBJ_POTION_FIRE $scatter_arr.locs[9].x $scatter_arr.locs[9].y obj_loc_9}
{VRA_OBJ_POTION_COLD $scatter_arr.locs[10].x $scatter_arr.locs[10].y obj_loc_10}
{VRA_OBJ_POTION_HOLY $scatter_arr.locs[11].x $scatter_arr.locs[11].y obj_loc_11}

{VRA_OBJ_CHEST_GOLD  $scatter_arr.locs[12].x $scatter_arr.locs[12].y obj_loc_12}
{VRA_OBJ_PLAIN_GOLD  $scatter_arr.locs[13].x $scatter_arr.locs[13].y obj_loc_13}
{VRA_OBJ_POTION_REGN $scatter_arr.locs[14].x $scatter_arr.locs[14].y obj_loc_14}
{VRA_OBJ_POTION_FIRE $scatter_arr.locs[15].x $scatter_arr.locs[15].y obj_loc_15}
{VRA_OBJ_POTION_COLD $scatter_arr.locs[16].x $scatter_arr.locs[16].y obj_loc_16}
{VRA_OBJ_POTION_HOLY $scatter_arr.locs[17].x $scatter_arr.locs[17].y obj_loc_17}
#endif

#ifdef EASY
{VRA_OBJ_CHEST_GOLD  $scatter_arr.locs[18].x $scatter_arr.locs[18].y obj_loc_18}
{VRA_OBJ_PLAIN_GOLD  $scatter_arr.locs[19].x $scatter_arr.locs[19].y obj_loc_19}
{VRA_OBJ_POTION_REGN $scatter_arr.locs[20].x $scatter_arr.locs[20].y obj_loc_20}
{VRA_OBJ_POTION_FIRE $scatter_arr.locs[21].x $scatter_arr.locs[21].y obj_loc_21}
{VRA_OBJ_POTION_COLD $scatter_arr.locs[22].x $scatter_arr.locs[22].y obj_loc_22}
{VRA_OBJ_POTION_HOLY $scatter_arr.locs[23].x $scatter_arr.locs[23].y obj_loc_23}

{VRA_OBJ_CHEST_GOLD  $scatter_arr.locs[24].x $scatter_arr.locs[24].y obj_loc_24}
{VRA_OBJ_PLAIN_GOLD  $scatter_arr.locs[25].x $scatter_arr.locs[25].y obj_loc_25}
{VRA_OBJ_POTION_REGN $scatter_arr.locs[26].x $scatter_arr.locs[26].y obj_loc_26}
{VRA_OBJ_POTION_FIRE $scatter_arr.locs[27].x $scatter_arr.locs[27].y obj_loc_27}
{VRA_OBJ_POTION_COLD $scatter_arr.locs[28].x $scatter_arr.locs[28].y obj_loc_28}
{VRA_OBJ_POTION_HOLY $scatter_arr.locs[29].x $scatter_arr.locs[29].y obj_loc_29}
#endif

# This didn't work
#[foreach]
#	array=debbie.locs
#	index_var=i
#	[do]
#		{VRA_OBJ_POTION_HOLY $debbie.locs[$i].x $debbie.locs[$i].y obj_holy_$debbie.locs[$i].count}
#	[/do]
#[/foreach]

[event]
	name=victory
	{VRA_REMOVE_OBJECT obj_loc_0}
	{VRA_REMOVE_OBJECT obj_loc_1}
	{VRA_REMOVE_OBJECT obj_loc_2}
	{VRA_REMOVE_OBJECT obj_loc_3}
	{VRA_REMOVE_OBJECT obj_loc_4}
	{VRA_REMOVE_OBJECT obj_loc_5}
	{VRA_REMOVE_OBJECT obj_loc_6}
	{VRA_REMOVE_OBJECT obj_loc_7}
	{VRA_REMOVE_OBJECT obj_loc_8}
	{VRA_REMOVE_OBJECT obj_loc_9}

	{VRA_REMOVE_OBJECT obj_loc_10}
	{VRA_REMOVE_OBJECT obj_loc_11}
	{VRA_REMOVE_OBJECT obj_loc_12}
	{VRA_REMOVE_OBJECT obj_loc_13}
	{VRA_REMOVE_OBJECT obj_loc_14}
	{VRA_REMOVE_OBJECT obj_loc_15}
	{VRA_REMOVE_OBJECT obj_loc_16}
	{VRA_REMOVE_OBJECT obj_loc_17}
	{VRA_REMOVE_OBJECT obj_loc_18}
	{VRA_REMOVE_OBJECT obj_loc_19}

	{VRA_REMOVE_OBJECT obj_loc_20}
	{VRA_REMOVE_OBJECT obj_loc_21}
	{VRA_REMOVE_OBJECT obj_loc_22}
	{VRA_REMOVE_OBJECT obj_loc_23}
	{VRA_REMOVE_OBJECT obj_loc_24}
	{VRA_REMOVE_OBJECT obj_loc_25}
	{VRA_REMOVE_OBJECT obj_loc_26}
	{VRA_REMOVE_OBJECT obj_loc_27}
	{VRA_REMOVE_OBJECT obj_loc_28}
	{VRA_REMOVE_OBJECT obj_loc_29}

	[remove_unit_overlay]
		side=1
		ability=potion
		image=misc/holy-water-overlay.png
	[/remove_unit_overlay]
	[remove_unit_overlay]
		side=1
		ability=potion
		image=misc/potion-blue-overlay.png
	[/remove_unit_overlay]
	[remove_unit_overlay]
		side=1
		ability=potion
		image=misc/potion-green-overlay.png
	[/remove_unit_overlay]
	[remove_unit_overlay]
		side=1
		ability=potion
		image=misc/potion-grey-overlay.png
	[/remove_unit_overlay]
	[remove_unit_overlay]
		side=1
		ability=potion
		image=misc/potion-poison-overlay.png
	[/remove_unit_overlay]
	[remove_unit_overlay]
		side=1
		ability=potion
		image=misc/potion-red-overlay.png
	[/remove_unit_overlay]
	[remove_unit_overlay]
		side=1
		ability=potion
		image=misc/potion-yellow-overlay.png
	[/remove_unit_overlay]

[/event]
#enddef
