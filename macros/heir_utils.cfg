#textdomain wesnoth-Vaelia_Random_Adventures

#define VRA_CAVE_TERRAIN
	terrain=U*,R*,U*^Emf,U*^Uf,W*,Sm,H*,A*,D*
#enddef

################################
#
# SCEPTRE OF FIRE MACROS FOLLOW
#
################################

#define SOF_TERRAIN_MASK MASK_FILE
[terrain_mask]
	x,y=1,1
	#mask="{~add-ons/Vaelia_Random_Adventures/maps/03_vra_volcano.mask}"
	mask={MASK_FILE}

	[rule]      # Make sure your castle keep and cave walls are not converted
		old=Cud, Xu, Kud
		new=Re, Uu^Vud, Uh, Uu^Uf
		use_old=yes
	[/rule]
	[rule]      # Convert cave villages to stone villages
		old=Vu
		new=Re, Uu^Vud, Uh, Uu^Uf   # wmllint: ignore
		terrain=Uu^Vud
	[/rule]
	[rule]      # Add stone villages
		old=Uu
		new=Uu^Vud
		terrain=Uu^Vud
	[/rule]
	[rule]      # Add roads
		old=Uu
		new=Re
		terrain=Re
	[/rule]
	[rule]      # Add hilly caves
		old=Uu
		new=Uh
		terrain=Uh
	[/rule]
	[rule]      # Add a mushroom forest
		old=Uu
		new=Uu^Uf
		terrain=Uu^Uf
	[/rule]
[/terrain_mask]
#enddef

#define ERASE_CASTLE SIDE TERRAIN
[store_unit]
	variable=side_store
	[filter]
		side={SIDE}
		canrecruit=yes
	[/filter]
[/store_unit]
{VARIABLE min_x $side_store.x}
{VARIABLE_OP min_x sub 1}
{VARIABLE min_y $side_store.y}
{VARIABLE_OP min_y sub 1}
{VARIABLE max_x $side_store.x}
{VARIABLE_OP max_x add 1}
{VARIABLE max_y $side_store.y}
{VARIABLE_OP max_y add 1}
{VARIABLE x_range ("$min_x|-$max_x")}
{VARIABLE y_range ("$min_y|-$max_y")}
[terrain]
	x=$x_range
	y=$y_range
	terrain={TERRAIN}
[/terrain]
{CLEAR_VARIABLE side_store,min_x,min_y,max_x,max_y,x_range,y_range}
#enddef

#define ERASE_CASTLE_LAVA SIDE TERRAIN
[store_unit]
	variable=side_store
	[filter]
		side={SIDE}
		canrecruit=yes
	[/filter]
[/store_unit]
{VARIABLE min_x $side_store.x}
{VARIABLE_OP min_x sub 1}
{VARIABLE min_y $side_store.y}
{VARIABLE_OP min_y sub 1}
{VARIABLE max_x $side_store.x}
{VARIABLE_OP max_x add 1}
{VARIABLE max_y $side_store.y}
{VARIABLE_OP max_y add 1}
{VARIABLE x_range ("$min_x|-$max_x")}
{VARIABLE y_range ("$min_y|-$max_y")}
[terrain]
	x=$x_range
	y=$y_range
	terrain={TERRAIN}
[/terrain]
[terrain]
	x=$side_store.x
	y=$side_store.y
	terrain=Mv
[/terrain]
{CLEAR_VARIABLE side_store,min_x,min_y,max_x,max_y,x_range,y_range}

[store_unit]
	variable=side_store
	[filter]
		side=1
		canrecruit=yes
	[/filter]
[/store_unit]
{VARIABLE sceptre_x $side_store.x}
{VARIABLE sceptre_y $side_store.y}
{CLEAR_VARIABLE side_store}
#enddef

#textdomain wesnoth-help
#define UNDERGROUND_VOLCANO RED GREEN BLUE
#
# -30, -40, -40 are the default good values for an underground
# reddish hue
#
[time]
	id=underground
	name= _ "Underground"
	image=misc/time-schedules/schedule-underground.png
	lawful_bonus=-25
	red={RED}
	green={GREEN}
	blue={BLUE}
[/time]
#enddef

#textdomain wesnoth-Vaelia_Random_Adventures
#define NEXT_LAVA
[store_locations]
	variable=potential_locs
	terrain=Xu
	[filter_adjacent_location]
		terrain=U*, Re
		[filter_adjacent_location]
			terrain=U*, Re
			count=4-5
		[/filter_adjacent_location]
	[/filter_adjacent_location]
	[not]
		# don't start near the cave floor around the sceptre
		x=$sceptre_x
		y=$sceptre_y
		radius=5
	[/not]
	[not]
		# don't start near the existing lava
		terrain=Ql
		radius=5
	[/not]
[/store_locations]
[if]
	[variable]
		name=potential_locs.length
		greater_than=0
	[/variable]
[then]
	{VARIABLE lava_count 0}
	{VARIABLE randrange $potential_locs.length}
	{VARIABLE_OP randrange sub 1}
	{VARIABLE randrange "0..$randrange"}
	{RANDOM $randrange}
	{CLEAR_VARIABLE lava_body}
	{VARIABLE lava_body.x $potential_locs[$random].x}
	{VARIABLE lava_body.y $potential_locs[$random].y}
	{CLEAR_VARIABLE random}
	[terrain]
		x=$lava_body.x
		y=$lava_body.y
		terrain=Ql
	[/terrain]
	{CLEAR_VARIABLE randrange}
[/then]
[/if]
{CLEAR_VARIABLE potential_locs}
#enddef

#define EXPAND_LAVA
# the lava should expand to any cave floor that is not next to a cavewall,
# or cave floor that is next to cavewall that is already next to lava
# also if it comes near another lavabody, it should not expand in that direction

# first we store cavewall that is not already next to this lava
[store_locations]
	variable=far_walls
	terrain=Xu
	[not]
		find_in=lava_body
		radius=1
	[/not]
[/store_locations]

# next we store lava that is not part of this body
[store_locations]
	variable=far_lava
	terrain=Ql
	[not]
		find_in=lava_body
	[/not]
[/store_locations]

# now we store cave floor nearby that doesn't approach the bad stuff
[store_locations]
	variable=good_floor
	terrain=U*,Re
	[and]
		find_in=lava_body
		radius=1
	[/and]
	[not]
		find_in=far_walls
		radius=1
	[/not]
	[not]
		find_in=far_lava
		radius=1
	[/not]
	[not]
		# don't go anywhere near the cave floor around the sceptre
		x,y=$sceptre_x,$sceptre_y
		radius=4
		[filter_radius]
			terrain=U*,Re
		[/filter_radius]
	[/not]
[/store_locations]

[if]
	[variable]
		name=good_floor.length
		greater_than=0
	[/variable]
[then]
	{QUAKE "rumble.ogg"}
	[foreach]
		array=good_floor
		[do]
			[terrain]
				x=$this_item.x
				y=$this_item.y
				terrain=Ql
			[/terrain]
		[/do]
	[/foreach]
	[store_locations]
		variable=lava_body
		find_in=lava_body
		[or]
			find_in=good_floor
		[/or]
	[/store_locations]
[/then]
[else]
	# this lava can't expand so force a new eruption
	{NEXT_LAVA}
[/else]
[/if]
{CLEAR_VARIABLE far_walls}
{CLEAR_VARIABLE far_lava}
{CLEAR_VARIABLE good_floor}

# everyone on lava dies
[kill]
	[not]
		type=Gryphon Rider,Gryphon Master
	[/not]
	[filter_location]
		terrain=Ql
	[/filter_location]
	animate=yes
	fire_event=yes
[/kill]
#enddef

#define NEXT_LAVA_EXISTING
[store_locations]
	variable=potential_locs
	terrain=Mv
	[filter_adjacent_location]
		{VRA_CAVE_TERRAIN}
		[filter_adjacent_location]
			{VRA_CAVE_TERRAIN}
			count=4-5
		[/filter_adjacent_location]
	[/filter_adjacent_location]
	[not]
		# don't start near the cave floor around the sceptre
		x=$sceptre_x
		y=$sceptre_y
		radius=5
	[/not]
	[not]
		# don't start near center
		x=25
		y=25
		radius=5
	[/not]
	[not]
		# don't start near the existing lava
		terrain=Ql
		radius=5
	[/not]
[/store_locations]
[if]
	[variable]
		name=potential_locs.length
		greater_than=0
	[/variable]
[then]
	{VARIABLE lava_count 0}
	{VARIABLE randrange $potential_locs.length}
	{VARIABLE_OP randrange sub 1}
	{VARIABLE randrange "0..$randrange"}
	{RANDOM $randrange}
	{CLEAR_VARIABLE lava_body}
	{VARIABLE lava_body.x $potential_locs[$random].x}
	{VARIABLE lava_body.y $potential_locs[$random].y}
	{CLEAR_VARIABLE random}
	[terrain]
		x=$lava_body.x
		y=$lava_body.y
		terrain=Ql
	[/terrain]
	{CLEAR_VARIABLE randrange}
[/then]
[/if]
{CLEAR_VARIABLE potential_locs}
#enddef

#define EXPAND_LAVA_EXISTING
# the lava should expand to any cave floor that is not next to a cavewall,
# or cave floor that is next to cavewall that is already next to lava
# also if it comes near another lavabody, it should not expand in that direction

# first we store cavewall that is not already next to this lava
[store_locations]
	variable=far_walls
	terrain=Qxu
	[not]
		find_in=lava_body
		radius=1
	[/not]
[/store_locations]

# next we store lava that is not part of this body
[store_locations]
	variable=far_lava
	terrain=Ql
	[not]
		find_in=lava_body
	[/not]
[/store_locations]

# now we store cave floor nearby that doesn't approach the bad stuff
[store_locations]
	variable=good_floor
	{VRA_CAVE_TERRAIN}
	[and]
		find_in=lava_body
		radius=1
	[/and]
	[not]
		find_in=far_walls
		radius=1
	[/not]
	[not]
		find_in=far_lava
		radius=1
	[/not]
	[not]
		# don't go anywhere near the cave floor around the sceptre
		x,y=$sceptre_x,$sceptre_y
		radius=4
		[filter_radius]
			{VRA_CAVE_TERRAIN}
		[/filter_radius]
	[/not]
	[not]
		# don't go anywhere near the cave floor around the sceptre
		x,y=25,25
		radius=4
		[filter_radius]
			{VRA_CAVE_TERRAIN}
		[/filter_radius]
	[/not]
[/store_locations]

[if]
	[variable]
	name=good_floor.length
	greater_than=0
	[/variable]
[then]
	{QUAKE "rumble.ogg"}
	[foreach]
		array=good_floor
		[do]
		[terrain]
			x=$this_item.x
			y=$this_item.y
			terrain=Ql
		[/terrain]
		[/do]
	[/foreach]
	[store_locations]
		variable=lava_body
		find_in=lava_body
		[or]
			find_in=good_floor
		[/or]
	[/store_locations]
[/then]
[else]
	# this lava can't expand so force a new eruption
	{NEXT_LAVA_EXISTING}
[/else]
[/if]
{CLEAR_VARIABLE far_walls}
{CLEAR_VARIABLE far_lava}
{CLEAR_VARIABLE good_floor}

# everyone on lava dies
[kill]
	[not]
		type=Gryphon Rider,Gryphon Master
	[/not]
	[filter_location]
		terrain=Ql
	[/filter_location]
	animate=yes
	fire_event=yes
[/kill]
#enddef

#define PLACE_SCEPTRE DIRECTION
[event]
name=prestart
[item]
location_id="sceptre"
image="scenery/mine-abandoned.png"
visible_in_fog=no
[/item]

[item]
location_id="signpost"
image="scenery/trapdoor-open.png"
visible_in_fog=no
[/item]
[/event]

[event]
	name=moveto
	first_time_only=yes
	[filter]
		side=1
		[filter_location]
			location_id="sceptre"
		[/filter_location]
	[/filter]
	{VARIABLE_OP isBlocked rand "1..100"}
	[if]
		{VARIABLE_CONDITIONAL isBlocked less_than_equal_to 60}
	[then]
		[message]
			speaker=unit
			message= _ "It's blocked! We need to find another exit..."
		[/message]
		[message]
			speaker=Vaelia
			message= _ "Head {DIRECTION}. It is the only way now..."
		[/message]
	[/then]
	[else]
		[message]
			speaker=unit
			message= _ "Found the exit..."
		[/message]
		{CLEAR_VARIABLE vra.map}
		{VRA_NEXT_ENDLEVEL _""}
	[/else]
	[/if]
[/event]

[event]
	name=moveto
	first_time_only=no
	[filter]
		side=1
		[filter_location]
			location_id="signpost"
		[/filter_location]
	[/filter]
	[message]
		speaker=unit
		message= _ "This leads out..."
	[/message]
	{CLEAR_VARIABLE vra.map}
	{VRA_NEXT_ENDLEVEL _""}
[/event]
#enddef

#define VRA_CLEAR_VICINITY VRA_LOCATION
        [store_locations]
            terrain=Xu,Qxu,Ql
            [and]
                location_id="{VRA_LOCATION}"
                radius=3
            [/and]
            [or]
                location_id="{VRA_LOCATION}"
                radius=1
            [/or]
            variable=sceptre_vicinity
        [/store_locations]
        [foreach]
            array=sceptre_vicinity
            [do]
                [terrain]
                    x=$this_item.x
                    y=$this_item.y
                    terrain=Urb
                [/terrain]
            [/do]
        [/foreach]
        {CLEAR_VARIABLE sceptre_vicinity}
        [terrain]
            location_id="{VRA_LOCATION}"
            terrain=Uu
            #terrain=Uu^Ii
        [/terrain]
#enddef
