#textdomain wesnoth-Vaelia_Random_Adventures

#define VRA_CAVE_TERRAIN
	terrain=U*,U*^*,R*,R*^*,W*,W*^*,S*,S*^*,H*,H*^*,A*,A*^*,D*,D*^*,G*,G*^*,*^V*
#enddef

################################
#
# SCEPTRE OF FIRE MACROS FOLLOW
#
################################

#define ERASE_CASTLE SIDE TERRAIN
[store_unit]
	variable=side_store
	[filter]
		side={SIDE}
		canrecruit=yes
	[/filter]
[/store_unit]
{VARIABLE min_x $side_store.x}
{VARIABLE_OP min_x sub 1}
{VARIABLE min_y $side_store.y}
{VARIABLE_OP min_y sub 1}
{VARIABLE max_x $side_store.x}
{VARIABLE_OP max_x add 1}
{VARIABLE max_y $side_store.y}
{VARIABLE_OP max_y add 1}
{VARIABLE x_range ("$min_x|-$max_x")}
{VARIABLE y_range ("$min_y|-$max_y")}
[terrain]
	x=$x_range
	y=$y_range
	terrain={TERRAIN}
[/terrain]
{CLEAR_VARIABLE side_store,min_x,min_y,max_x,max_y,x_range,y_range}
#enddef

#define ERASE_CASTLE_LAVA SIDE TERRAIN
[store_unit]
	variable=side_store
	[filter]
		side={SIDE}
		canrecruit=yes
	[/filter]
[/store_unit]
{VARIABLE min_x $side_store.x}
{VARIABLE_OP min_x sub 1}
{VARIABLE min_y $side_store.y}
{VARIABLE_OP min_y sub 1}
{VARIABLE max_x $side_store.x}
{VARIABLE_OP max_x add 1}
{VARIABLE max_y $side_store.y}
{VARIABLE_OP max_y add 1}
{VARIABLE x_range ("$min_x|-$max_x")}
{VARIABLE y_range ("$min_y|-$max_y")}
[terrain]
	x=$x_range
	y=$y_range
	terrain={TERRAIN}
[/terrain]
[terrain]
	x=$side_store.x
	y=$side_store.y
	terrain=Mv
[/terrain]
{CLEAR_VARIABLE side_store,min_x,min_y,max_x,max_y,x_range,y_range}
#enddef

#textdomain wesnoth-help
#define UNDERGROUND_VOLCANO RED GREEN BLUE
#
# -30, -40, -40 are the default good values for an underground
# reddish hue
#
[time]
	id=underground
	name= _ "Underground"
	image=misc/time-schedules/schedule-underground.png
	lawful_bonus=-25
	red={RED}
	green={GREEN}
	blue={BLUE}
[/time]
#enddef

#textdomain wesnoth-Vaelia_Random_Adventures
#define NEXT_LAVA
[store_locations]
	variable=potential_locs
	terrain=Xu
	[filter_adjacent_location]
		terrain=U*, Re
		[filter_adjacent_location]
			terrain=U*, Re
			count=4-5
		[/filter_adjacent_location]
	[/filter_adjacent_location]
	[not]
		# don't start near the cave floor around the exitmine
		x=$exitmine.x
		y=$exitmine.y
		radius=5
	[/not]
	[not]
		# don't start near the cave floor around the exittrap
		x=$exittrap.x
		y=$exittrap.y
		radius=5
	[/not]
	[not]
		# don't start near the existing lava
		terrain=Ql
		radius=5
	[/not]
[/store_locations]
[if]
	[variable]
		name=potential_locs.length
		greater_than=0
	[/variable]
[then]
	{VARIABLE lava_count 0}
	{VARIABLE randrange $potential_locs.length}
	{VARIABLE_OP randrange sub 1}
	{VARIABLE randrange "0..$randrange"}
	{RANDOM $randrange}
	{CLEAR_VARIABLE lava_body.edge}
	{CLEAR_VARIABLE lava_body}
	{VARIABLE lava_body.edge.x $potential_locs[$random].x}
	{VARIABLE lava_body.edge.y $potential_locs[$random].y}
	{CLEAR_VARIABLE random}
	[terrain]
		x=$lava_body.edge.x
		y=$lava_body.edge.y
		terrain=Ql
	[/terrain]
	{CLEAR_VARIABLE randrange}
[/then]
[/if]
{CLEAR_VARIABLE potential_locs}
#enddef

#define EXPAND_LAVA
# the lava should expand to any cave floor that is not next to a cavewall,
# or cave floor that is next to cavewall that is already next to lava
# also if it comes near another lavabody, it should not expand in that direction

# first we store cavewall that is not already next to this lava
[store_locations]
	variable=far_walls
	terrain=Xu
	[not]
		find_in=lava_body.edge
		radius=1
	[/not]
[/store_locations]

# next we store lava that is not part of this body
[store_locations]
	variable=far_lava
	terrain=Ql
	[not]
		find_in=lava_body.edge
	[/not]
[/store_locations]

# now we store cave floor nearby that doesn't approach the bad stuff
[store_locations]
	variable=good_floor
	terrain=U*,Re
	[and]
		find_in=lava_body.edge
		radius=1
	[/and]
	[not]
		find_in=far_walls
		radius=1
	[/not]
	[not]
		find_in=far_lava
		radius=1
	[/not]
	[not]
		# don't go anywhere near the cave floor around the exitmine
		x,y=$exitmine.x,$exitmine.y
		radius=4
		[filter_radius]
			terrain=U*,Re
		[/filter_radius]
	[/not]
	[not]
		# don't go anywhere near the cave floor around the exittrap
		x,y=$exittrap.x,$exittrap.y
		radius=4
		[filter_radius]
			terrain=U*,Re
		[/filter_radius]
	[/not]
[/store_locations]

[if]
	[variable]
		name=good_floor.length
		greater_than=0
	[/variable]
[then]
	{VARIABLE_OP random_sound rand (rumble.ogg,cave-in.ogg)}
	{QUAKE $random_sound}
	{CLEAR_VARIABLE random_sound}
	[foreach]
		array=good_floor
		[do]
			[terrain]
				x=$this_item.x
				y=$this_item.y
				terrain=Ql
			[/terrain]
		[/do]
	[/foreach]
	[store_locations]
		variable=lava_body.edge
		find_in=lava_body.edge
		[or]
			find_in=good_floor
		[/or]
	[/store_locations]
[/then]
[else]
	# this lava can't expand so force a new eruption
	{NEXT_LAVA}
[/else]
[/if]
{CLEAR_VARIABLE far_walls}
{CLEAR_VARIABLE far_lava}
{CLEAR_VARIABLE good_floor}

# everyone on lava dies
[kill]
	[filter_location]
		terrain=Ql
	[/filter_location]
	animate=yes
	fire_event=yes
[/kill]
#enddef

#define NEXT_LAVA_EXISTING
[store_locations]
	variable=potential_locs
	terrain=Mv
	[filter_adjacent_location]
		{VRA_CAVE_TERRAIN}
		[filter_adjacent_location]
			{VRA_CAVE_TERRAIN}
			count=4-5
		[/filter_adjacent_location]
	[/filter_adjacent_location]
[/store_locations]
[if]
	[variable]
		name=potential_locs.length
		greater_than=0
	[/variable]
[then]
	{VARIABLE randrange $potential_locs.length}
	{VARIABLE_OP randrange sub 1}
	{VARIABLE randrange "0..$randrange"}
	{RANDOM $randrange}
	{CLEAR_VARIABLE lava_body.edge}
	{CLEAR_VARIABLE lava_body}
	{VARIABLE lava_body.edge.x $potential_locs[$random].x}
	{VARIABLE lava_body.edge.y $potential_locs[$random].y}
	{CLEAR_VARIABLE random}
	[terrain]
		x=$lava_body.edge.x
		y=$lava_body.edge.y
		terrain=Mv
	[/terrain]
	{CLEAR_VARIABLE randrange}
[/then]
[else]
	{CLEAR_VARIABLE lava_body.edge}
	{CLEAR_VARIABLE lava_body}
[/else]
[/if]
{CLEAR_VARIABLE potential_locs}
#enddef

#define EXPAND_LAVA_EXISTING
[if]
	[variable]
		name=lava_body.edge.length
		greater_than=0
	[/variable]
[then]
	# first we store cavewall that is not already next to this lava
	[store_locations]
		variable=far_walls
		terrain=Qxu,Xu,K*,C*
		[not]
			find_in=lava_body.edge
			radius=1
		[/not]
	[/store_locations]

	# now we store cave floor nearby that doesn't approach the bad stuff
	[store_locations]
		variable=good_floor
		{VRA_CAVE_TERRAIN}
		[and]
			find_in=lava_body.edge
			radius=1
		[/and]
		[not]
			find_in=far_walls
			radius=1
		[/not]
	[/store_locations]

	[if]
		[variable]
		name=good_floor.length
		greater_than=0
		[/variable]
	[then]
		{VARIABLE_OP random_sound rand (rumble.ogg,cave-in.ogg)}
		{QUAKE $random_sound}
		{CLEAR_VARIABLE random_sound}
		[foreach]
			array=good_floor
			[do]
			[terrain]
				x=$this_item.x
				y=$this_item.y
				terrain=Ql
			[/terrain]
			[/do]
		[/foreach]
		{CLEAR_VARIABLE lava_body.edge}
		{CLEAR_VARIABLE lava_body}
		[store_locations]
			variable=lava_body.edge
			find_in=good_floor
		[/store_locations]
	[/then]
	[else]
		{CLEAR_VARIABLE lava_body.edge}
		{CLEAR_VARIABLE lava_body}
	[/else]
	[/if]
	{CLEAR_VARIABLE far_walls}
	{CLEAR_VARIABLE good_floor}
[/then]
[/if]

# everyone on lava dies
[kill]
	[filter_location]
		terrain=Ql,Mv,Qxu
	[/filter_location]
	animate=yes
	fire_event=yes
[/kill]
#enddef

#define PLACE_EXITS DIRECTION
[event]
name=prestart
[item]
location_id="exitmine"
image="scenery/mine-abandoned.png"
visible_in_fog=no
[/item]

[item]
location_id="exittrap"
image="scenery/trapdoor-open.png"
visible_in_fog=no
[/item]
[/event]

[event]
	name=moveto
	first_time_only=yes
	[filter]
		side=1
		canrecruit=no
		[filter_location]
			location_id="exitmine"
		[/filter_location]
	[/filter]
	[message]
		speaker=unit
		message= _ "I found the exit. Come over here..."
	[/message]
[/event]

[event]
	name=moveto
	first_time_only=yes
	[filter]
		side=1
		canrecruit=no
		[filter_location]
			location_id="exittrap"
		[/filter_location]
	[/filter]
	[message]
		speaker=unit
		message= _ "Right here, this could be it. Come over..."
	[/message]
[/event]

[event]
	name=moveto
	first_time_only=no
	[filter]
		side=1
		canrecruit=yes
		[filter_location]
			location_id="exitmine"
		[/filter_location]
	[/filter]

	[if]
		{VARIABLE_CONDITIONAL random_exit equals "exitmine"}
	[then]
		[message]
			speaker=unit
			message= _ "Let's get out of here..."
		[/message]

		{CLEAR_VARIABLE random_exit}
		{CLEAR_VARIABLE vra.map}
		{VARIABLE vra.map Bonus}
		{VRA_NEXT_ENDLEVEL}
	[/then]
	[else]
		[message]
			speaker=unit
			message= _ "It's blocked! We need to find another exit..."
		[/message]
		[message]
			speaker=Vaelia
			message= _ "Head {DIRECTION}. It is the only way now..."
		[/message]
	[/else]
	[/if]
[/event]

[event]
	name=moveto
	first_time_only=no
	[filter]
		side=1
		canrecruit=yes
		[filter_location]
			location_id="exittrap"
		[/filter_location]
	[/filter]
	[if]
		{VARIABLE_CONDITIONAL random_exit equals "exittrap"}
	[then]
		[message]
			speaker=unit
			message= _ "Let's get out of here..."
		[/message]

		{CLEAR_VARIABLE random_exit}
		{CLEAR_VARIABLE vra.map}
		{VARIABLE vra.map Bonus}
		{VRA_NEXT_ENDLEVEL}
	[/then]
	[else]
		[message]
			speaker=unit
			message= _ "No luck. This one is blocked!"
		[/message]
		[message]
			speaker=Vaelia
			message= _ "Head back and find the mine shaft..."
		[/message]
	[/else]
	[/if]
[/event]
#enddef

#define VRA_CLEAR_VICINITY VRA_LOCATION
        [store_locations]
            terrain=Xu,Qxu,Ql
            [and]
                location_id="{VRA_LOCATION}"
                radius=3
            [/and]
            [or]
                location_id="{VRA_LOCATION}"
                radius=1
            [/or]
            variable=exit_vicinity
        [/store_locations]
        [foreach]
            array=exit_vicinity
            [do]
                [terrain]
                    x=$this_item.x
                    y=$this_item.y
                    terrain=Uu
                [/terrain]
            [/do]
        [/foreach]
        {CLEAR_VARIABLE exit_vicinity}
        [terrain]
            location_id="{VRA_LOCATION}"
            terrain=Uu
            #terrain=Uu^Ii
        [/terrain]
#enddef
