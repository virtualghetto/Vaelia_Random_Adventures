#textdomain wesnoth-Vaelia_Random_Adventures

## postgeneration files contain macros only used in that one. Macros used in several postgenerations are in utilities files.
## lack of homogenic system in postgeneration rutines is quite intended, to avoid pattern perception in long run from players
## scenarios need call postgeneration in steps to syncronize with generate bonus, enemy castle expansion and enemy themed events.

#define WCT_DIRT_BEACHS RNG_RANGE
    {VRA_SCATTER_FILTER_FRAC_RAND (
        terrain=Ds
        [filter_adjacent_location]
            terrain=Ww*,Wo*
        [/filter_adjacent_location]
    ) Ds^Esd {RNG_RANGE}}
#enddef

## pack of generic tweaks to default generator
#define WORLD_CONQUEST_TEK_MAP_REBUILD CAVE REEF
    {WCT_REDUCE_WALL_CLUSTERS {CAVE}}
    {WCT_FILL_LAVA_CHASMS}
    {WCT_VOLCANOS}
    {WCT_EXPAND_SNOW}
    ## add underwater ground
    {VRA_SCATTER_FILTER_PERCENTAGE (
        terrain=Wo
        [filter_adjacent_location]
            terrain=!,Wo
            count=2-6
        [/filter_adjacent_location]
    ) Ww {REEF}}
    ## add reefs
    {VRA_SCATTER_FILTER_PERCENTAGE (
        terrain=Wo
        [filter_adjacent_location]
            terrain=!,Wo
            count=2-6
        [/filter_adjacent_location]
        [or]
            terrain=Ww
            [and]
                terrain=Wo
                radius=3
            [/and]
        [/or]
    ) Wwr {REEF}}
    ## replace hills for mushrooms
    ## base amount in map surface
    [store_map_dimensions]
        variable=map_data.dim
    [/store_map_dimensions]
    {VARIABLE map_data.surface "$($map_data.dim.height*$map_data.dim.width)"}
    {RANDOM "$($map_data.surface/500)".."$($map_data.surface/250)"}
    {VRA_SCATTER_FILTER_NLOC (
        terrain=Hh,Hh^F*
        [filter_adjacent_location]
            terrain=A*^*,Ms^*,Ha^*
            count=0
        [/filter_adjacent_location]
        [and]
            terrain=Mm,Md,Xu,Mm^Xm,Uu,Uh,Uu^Uf,Ql,Qxu,Mv
            radius=2
        [/and]
    ) Hh^Uf $random}
    {CLEAR_VARIABLE map_data}
#enddef

#define WCT_FILL_LAVA_CHASMS
    [terrain]
        terrain=Ql
        layer=base
        [and]
            terrain=Qxu^*
            [and]
                terrain=Ql^*
                radius=999
                [filter_radius]
                    terrain=Ql^*,Qxu^*
                [/filter_radius]
            [/and]
        [/and]
    [/terrain]
#enddef

#define WORLD_CONQUEST_TEK_MAP_DIRT MUSHROOMS
    ## muddy swamps almost surrounded by sand
    {WCT_STORE_POSSIBLE_MUDDY_SWAMPS}
    [while]
        [variable]
            name=wcii.terrain_to_change.length
            greater_than=0
        [/variable]
        [do]
            [terrain]
                terrain=Sm
                find_in=wcii.terrain_to_change
            [/terrain]
            {WCT_STORE_POSSIBLE_MUDDY_SWAMPS}
        [/do]
    [/while]
    {WCT_RANDOMIZE_SNOWED_FOREST}
    {WCT_VOLCANOS_DIRT}
    ## volcanos dry mountains
    [terrain]
        terrain=Md
        layer=base
        [and]
            terrain=Mm^*
            [and]
                terrain=Mv
                radius=2
            [/and]
        [/and]
    [/terrain]
    ## lava dry mountains
    [terrain]
        terrain=Md
        layer=base
        [and]
            terrain=Mm*^*
            [and]
                terrain=Ql
                radius=1
            [/and]
        [/and]
    [/terrain]
    ## some impassible become mushrooms
    {VRA_SCATTER_FILTER_FRAC_RAND (
        terrain=Mm^Xm,Md^Xm
        [filter_adjacent_location]
            terrain=Ql,Mv
            count=0
        [/filter_adjacent_location]
    ) {MUSHROOMS} "9..11"}
    {WCT_DIRT_BEACHS 9..11}
    {CLEAR_VARIABLE rand}
#enddef

#define WCT_CHANGE_MAP_WATER TYPE
    [terrain]
        terrain=Ww{TYPE}
        layer=base
        [and]
            terrain=Ww^*
        [/and]
    [/terrain]
    [terrain]
        terrain=Wwr{TYPE}
        [and]
            terrain=Wwr
        [/and]
    [/terrain]
    [terrain]
        terrain=Wo{TYPE}
        [and]
            terrain=Wo
        [/and]
    [/terrain]
#enddef

#define WCT_MAP_DECORATIVE_DOCKS
    {VRA_SCATTER_FILTER_PERCENTAGE (
        terrain=Ww
        [filter_adjacent_location]
            terrain=Ds,C*,K*
            adjacent=ne,sw
            [filter_adjacent_location]
                terrain=G*^V*,D*^V*,H*^V*,C*,K*
            [/filter_adjacent_location]
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Ww,Wo,Wwr
            adjacent=ne,sw
        [/filter_adjacent_location]
    ) Ww^Bw/ 17}
    {VRA_SCATTER_FILTER_PERCENTAGE (
        terrain=Ww
        [filter_adjacent_location]
            terrain=Ds,C*,K*
            adjacent=nw,se
            [filter_adjacent_location]
                terrain=G*^V*,D*^V*,H*^V*,C*,K*
            [/filter_adjacent_location]
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Ww,Wo,Wwr
            adjacent=nw,se
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=*^B*
            count=0
        [/filter_adjacent_location]
    ) Ww^Bw\ 18}
    ## chance of trash near docks
    {VRA_SCATTER_FILTER_ALL (
        terrain=Ds
        [filter_adjacent_location]
            terrain=*^B*
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=C*^*,K*^*,*^V*
        [/filter_adjacent_location]
    ) (Ds,Ds,Ds,Ds,Ds,Ds^Edt)}
    {VRA_SCATTER_FILTER_ALL (
        terrain=Ds
        [filter_adjacent_location]
            terrain=Ds^Edt
        [/filter_adjacent_location]
    ) (Ds,Ds,Ds,Ds,Ds,Ds,Ds,Ds,Ds,Ds^Edt)}
#enddef

#define WCT_STORE_POSSIBLE_FLOWERS TERRAIN
    [store_locations]
        terrain=Gs,Gg
        [filter_adjacent_location]
            terrain={TERRAIN}
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=D*^*,S*^*,Hd
            count=0
        [/filter_adjacent_location]
        variable=wcii.terrain_to_change
    [/store_locations]
    {RANDOM 0..9}
#enddef

#define WCT_STORE_POSSIBLE_MAP4_CASTLE VALUE
    [store_locations]
        terrain=H*^F*
        [filter_adjacent_location]
            terrain=H*^F*
            count=6
        [/filter_adjacent_location]
        variable=wcii.terrain_to_change
    [/store_locations]
    {RANDOM 0..{VALUE}}
#enddef

#define WCT_POSSIBLE_MAP4_CASTLE TERRAIN VALUE
    {WCT_STORE_POSSIBLE_MAP4_CASTLE {VALUE}}
    [while]
        [variable]
            name=wcii.terrain_to_change.length
            greater_than=0
        [/variable]
        [variable]
            name=random
            equals=0
        [/variable]
        [do]
            {RANDOM_INDEX wcii.terrain_to_change}
            [terrain]
                terrain={TERRAIN}
                x=$wcii.terrain_to_change[$random].x
                y=$wcii.terrain_to_change[$random].y
            [/terrain]
            {WCT_STORE_POSSIBLE_MAP4_CASTLE {VALUE}}
        [/do]
    [/while]
#enddef

#define WCT_STORE_POSSIBLE_DWARVEN_CASTLE
    [store_locations]
        terrain=Uh
        [filter_adjacent_location]
            terrain=Uh
            count=5-6
        [/filter_adjacent_location]
        variable=wcii.terrain_to_change
    [/store_locations]
    {RANDOM 0..1}
#enddef

#define WCT_STORE_POSSIBLE_ROADS VILLAGE
    [store_locations]
        terrain=Gg,Gs
        [filter_adjacent_location]
            terrain={VILLAGE}
            [filter_adjacent_location]
                terrain=R*,Ch*,Kh*
                count=0
            [/filter_adjacent_location]
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=R*,Kh*,Ch*
        [/filter_adjacent_location]
        variable=wcii.terrain_to_change
    [/store_locations]
#enddef

#define WCT_ROAD_TO_VILLAGE ROAD VILLAGE
    ## build roads of 1 hex to conect villages
    {WCT_STORE_POSSIBLE_ROADS {VILLAGE}}
    [while]
        [variable]
            name=wcii.terrain_to_change.length
            greater_than=0
        [/variable]
        [do]
            {RANDOM_INDEX wcii.terrain_to_change}
            [terrain]
                terrain={ROAD}
                x=$wcii.terrain_to_change[$random].x
                y=$wcii.terrain_to_change[$random].y
            [/terrain]
            {WCT_STORE_POSSIBLE_ROADS {VILLAGE}}
        [/do]
    [/while]
#enddef

#define WCT_CREATE_EVENT_ROADS_TO DESTINY TERRAIN
    [event]
        name=wct_roads_to_{DESTINY}
        id=wct_roads_to_{DESTINY}
        first_time_only=no
        [fire_event]
            name=wct_store_roads_{DESTINY}
        [/fire_event]
        [while]
            [variable]
                name=wcii.terrain_to_change.length
                greater_than=0
            [/variable]
            [do]
                {RANDOM_INDEX wcii.terrain_to_change}
                [terrain]
                    terrain={TERRAIN}
                    x=$wcii.terrain_to_change[$random].x
                    y=$wcii.terrain_to_change[$random].y
                [/terrain]
                [fire_event]
                    name=wct_store_roads_{DESTINY}
                [/fire_event]
            [/do]
        [/while]
    [/event]
    [event]
        name=start
        [remove_event]
            id=wct_roads_to_{DESTINY}
        [/remove_event]
        [remove_event]
            id=wct_store_roads_{DESTINY}
        [/remove_event]
        {CLEAR_VARIABLE wcii}
    [/event]
#enddef

#define WCT_ITERATE_ROADS_TO DESTINY RADIUS
    {VARIABLE radius {RADIUS}}
    [while]
        [variable]
            name=radius
            greater_than=0
        [/variable]
        [do]
            [fire_event]
                name=wct_roads_to_{DESTINY}
            [/fire_event]
            {VARIABLE_OP radius add -1}
        [/do]
    [/while]
    {CLEAR_VARIABLE radius}
#enddef

#define WCT_BREAK_WALLS WALL TERRAIN
    {WCT_STORE_BROKEN_WALL_CANDIDATES {WALL}}
    [while]
        [variable]
            name=wcii.terrain_to_change.length
            greater_than=0
        [/variable]
        [do]
            {RANDOM_INDEX wcii.terrain_to_change}
            {VARIABLE_OP wcii.terrain_to_change.broken rand {TERRAIN}}
            [terrain]
                terrain=$wcii.terrain_to_change.broken
                x=$wcii.terrain_to_change[$random].x
                y=$wcii.terrain_to_change[$random].y
            [/terrain]
            {WCT_STORE_BROKEN_WALL_CANDIDATES {WALL}}
        [/do]
    [/while]
#enddef

#define WCT_STORE_BROKEN_WALL_CANDIDATES WALL
    [store_locations]
        terrain={WALL}
        [filter_adjacent_location]
            terrain=M*^Xm,X*
            count=2-6
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Mv
            count=0
        [/filter_adjacent_location]
        variable=wcii.terrain_to_change
    [/store_locations]
#enddef

#define WCT_STORE_POSSIBLE_MUDDY_SWAMPS
    [store_locations]
        terrain=Ss
        [filter_adjacent_location]
            terrain=D*^*,Hd,Sm,Rd
            count=5-6
        [/filter_adjacent_location]
        variable=wcii.terrain_to_change
    [/store_locations]
#enddef

#define WCT_MAP_REDUCE_CASTLE_EXPANDING_RECRUIT CASTLE TERRAIN
    #    [terrain]
    #        terrain={TERRAIN}
    #        [and]
    #            terrain={CASTLE}
    #        [/and]
    #        [filter_adjacent_location]
    #            terrain=Ch,Cha,Kh*^*
    #        [/filter_adjacent_location]
    #    [/terrain]
#enddef

#define WCT_MAP_CAVE_PATH_TO TERRAIN
    [terrain]
        terrain={TERRAIN}
        [and]
            terrain=Ur
        [/and]
    [/terrain]
#enddef
