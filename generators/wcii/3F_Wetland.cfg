#textdomain wesnoth-Vaelia_Random_Adventures

## Wetland

#define WORLD_CONQUEST_TEK_MAP_POSTGENERATION_3F
	[event]
		name=prestart
		{WORLD_CONQUEST_TEK_MAP_REPAINT_3F}
		{WCT_MAP_3F_POST_BUNUS_DECORATION}
	[/event]
#enddef

#define WORLD_CONQUEST_TEK_MAP_REPAINT_3F
{VRA_SCATTER_FILTER_FRACTION (
				terrain=U*^Uf,U*
) "Ur" 10}
	{WCT_REDUCE_WALL_CLUSTERS (Uu,Uu^Uf,Uh,Uu^Uf,Uu,Uh,Uu,Uu,Qxu,Uu,Wwf)}

	## soft rough terrain generated
	{WCT_STORE_CAVE_PASSAGES_CANDIDATES}
	[while]
		[variable]
			name=terrain_to_change.length
			greater_than=0
		[/variable]
		[do]
			[terrain]
				terrain=Mm
				x,y=$terrain_to_change.x,$terrain_to_change.y
			[/terrain]
			{WCT_STORE_CAVE_PASSAGES_CANDIDATES}
		[/do]
	[/while]
{VRA_SCATTER_FILTER_FRACTION (
				terrain=Mm
) "Gd" 4}
{VRA_SCATTER_FILTER_FRACTION (
				terrain=Hh,Hh^F*,Hh^Uf
) "Gd" 4}

{VRA_SCATTER_FILTER_FRACTION (
				terrain=Gs,Gg
) "Ss" 7}
{VRA_SCATTER_FILTER_FRACTION (
				terrain=G*
) "*^Ftr" 5 LAYER="overlay"}
{VRA_SCATTER_FILTER_FRACTION (
				terrain=G*
) "*^Uf" 13 LAYER="overlay"}
{VRA_SCATTER_FILTER_FRACTION (
				terrain=G*
) "Hh,Hh,Hh,Hh^Ft,Mm" 5}
{VRA_SCATTER_FILTER_ALL (
				terrain=*^Ve
				[filter_adjacent_location]
					terrain=*^F*,Ss
					count=0
				[/filter_adjacent_location]
) "Gg^Vht,Hh^Vo"}
	## fix river water
	[terrain]
		terrain=Wwg
		layer=base
		[and]
			terrain=Ww^*
		[/and]
	[/terrain]
{VRA_SCATTER_FILTER_FRACTION (
				terrain=Wwg
				[filter_adjacent_location]
					terrain=Wwt^*,Wot
					count=0
				[/filter_adjacent_location]
) "Wwf" 3}

{VRA_SCATTER_FILTER_FRACTION (
				terrain=Hh^Fds
) "Hh^Ftp" 2}
	## fix bridge generation
	[terrain]
		terrain=Ww^Bw\
		[and]
			terrain=Wwf
			[filter_adjacent_location]
				terrain=Rb
				adjacent=nw,se
			[/filter_adjacent_location]
		[/and]
		[and]
			[filter_adjacent_location]
				terrain=*^Bw\
				adjacent=nw,se
			[/filter_adjacent_location]
			[or]
				[filter_adjacent_location]
					terrain=*^Bw|
					adjacent=n,s
				[/filter_adjacent_location]
			[/or]
			[or]
				[filter_adjacent_location]
					terrain=*^Bw/
					adjacent=ne,sw
				[/filter_adjacent_location]
			[/or]
		[/and]
	[/terrain]
	[terrain]
		terrain=Ww^Bw|
		[and]
			terrain=Wwf
			[filter_adjacent_location]
				terrain=Rb
				adjacent=n,s
			[/filter_adjacent_location]
		[/and]
		[and]
			[filter_adjacent_location]
				terrain=*^Bw\
				adjacent=nw,se
			[/filter_adjacent_location]
			[or]
				[filter_adjacent_location]
					terrain=*^Bw|
					adjacent=n,s
				[/filter_adjacent_location]
			[/or]
			[or]
				[filter_adjacent_location]
					terrain=*^Bw/
					adjacent=ne,sw
				[/filter_adjacent_location]
			[/or]
		[/and]
	[/terrain]
	[terrain]
		terrain=Ww^Bw/
		[and]
			terrain=Wwf
			[filter_adjacent_location]
				terrain=Rb
				adjacent=ne,sw
			[/filter_adjacent_location]
		[/and]
		[and]
			[filter_adjacent_location]
				terrain=*^Bw\
				adjacent=nw,se
			[/filter_adjacent_location]
			[or]
				[filter_adjacent_location]
					terrain=*^Bw|
					adjacent=n,s
				[/filter_adjacent_location]
			[/or]
			[or]
				[filter_adjacent_location]
					terrain=*^Bw/
					adjacent=ne,sw
				[/filter_adjacent_location]
			[/or]
		[/and]
	[/terrain]
	## extra obstacles far from impassible and water
{VRA_SCATTER_FILTER_FRACTION (
				terrain=G*
				[not]
					terrain=X*,M*^Xm
					radius=8
				[/not]
				[not]
					terrain=Ww*^*,Wo*
					radius=4
				[/not]
				[filter_adjacent_location]
					terrain=M*^*,H*^*
				[/filter_adjacent_location]
) "Ms" 12}
{VRA_SCATTER_FILTER_FRACTION (
				terrain=G*
				[not]
					terrain=X*,M*^Xm
					radius=8
				[/not]
				[not]
					terrain=Ww*^*,Wo*
					radius=4
				[/not]
) "Wwg" 12}
	[terrain]
		terrain=Mm^Xm
		[and]
			terrain=Ms
		[/and]
	[/terrain]
#enddef

#define WCT_MAP_3F_POST_BUNUS_DECORATION
	## add fords
{VRA_SCATTER_FILTER_FRACTION (
				terrain=G*
				[not]
					find_in=bonus.point
				[/not]
) "Wwf" 4}
	{RANDOM 0..6}
	[if]
		{VARIABLE_CONDITIONAL random greater_than 5}
		[then]
{VRA_SCATTER_FILTER_PERCENTAGE (
						terrain=G*
						[not]
							find_in=bonus.point
						[/not]
						[filter_adjacent_location]
							terrain=Wwf,Wwg
						[/filter_adjacent_location]
) "Wwf" 80}
		[/then]
	[/if]
	{RANDOM 0..6}
	[if]
		{VARIABLE_CONDITIONAL random greater_than 5}
		[then]
{VRA_SCATTER_FILTER_PERCENTAGE (
						terrain=G*
						[not]
							find_in=bonus.point
						[/not]
						[filter_adjacent_location]
							terrain=Wwf,Wwg
						[/filter_adjacent_location]
) "Wwf" 70}
		[/then]
	[/if]
	## fix water
	[terrain]
		terrain=Wwt
		[and]
			terrain=Wot
		[/and]
		[filter_adjacent_location]
			terrain=!,Wot
		[/filter_adjacent_location]
	[/terrain]
	[terrain]
		terrain=Ww
		layer=base
		[and]
			terrain=Wwt^*
		[/and]
		[filter_adjacent_location]
			terrain=!,Wot,Wwt^*
		[/filter_adjacent_location]
	[/terrain]
	## reefs
{VRA_SCATTER_FILTER_FRAC_RAND (
				terrain=Wwt
				[not]
					find_in=bonus.point
				[/not]
				[filter_adjacent_location]
					terrain=*^V*
					count=0
				[/filter_adjacent_location]
) "Wwrt" "40..100"}
	## chance of old tropical forest in high flat
	{RANDOM 0..3}
	[if]
		[variable]
			name=wct.custom_terrain
			equals=yes
		[/variable]
		[variable]
			name=random
			equals=0
		[/variable]
		[then]
{VRA_SCATTER_FILTER_FRAC_RAND (
						terrain=Gd^Ftr
						[filter_adjacent_location]
							terrain=S*^*,W*^*
							count=0
						[/filter_adjacent_location]
) "Gd^Fyt" "1..5"}
		[/then]
	[/if]
	## fix grass generated (used to mark altitude)
	[terrain]
		terrain=Gg
		layer=base
		[and]
			terrain=Gs^*
		[/and]
	[/terrain]
	[terrain]
		terrain=Gs
		layer=base
		[and]
			terrain=Gd^*
		[/and]
	[/terrain]
	## small mushrooms next to forest and swamp
	[terrain]
		terrain=^Em
		layer=overlay
		[and]
			terrain=G*
		[/and]
		[filter_adjacent_location]
			terrain=Ss
		[/filter_adjacent_location]
		[filter_adjacent_location]
			terrain=G*^Ftr
		[/filter_adjacent_location]
	[/terrain]
	## flowers on swamps
	[terrain]
		terrain=Ss^Efm
		[and]
			terrain=Ss
		[/and]
	[/terrain]
	## dry grass on some roads
{VRA_SCATTER_FILTER_FRAC_RAND (
				terrain=Rb
) "Gd" "3..21"}
	{WCT_MAP_CAVE_PATH_TO Rb}
#enddef

#define WCT_STORE_CAVE_PASSAGES_CANDIDATES
	[store_locations]
		terrain=Mm^Xm
		[filter_adjacent_location]
			terrain=Mm^Xm,Xu
			count=2-6
		[/filter_adjacent_location]
		[filter_adjacent_location]
			terrain=U*^*
		[/filter_adjacent_location]
		variable=terrain_to_change
	[/store_locations]
#enddef
