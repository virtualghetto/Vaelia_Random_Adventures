#textdomain wesnoth-Vaelia_Random_Adventures

## Delta

#define WORLD_CONQUEST_TEK_MAP_POSTGENERATION_3C
    [event]
        name=prestart
        {WORLD_CONQUEST_TEK_MAP_CONSTRUCTOR_DELTA}
        {WORLD_CONQUEST_TEK_MAP_REPAINT_3C}
        {WCT_MAP_3C_POST_BUNUS_DECORATION}
    [/event]
    [event]
        name=start
        {CLEAR_VARIABLE wcii}
    [/event]
#enddef

#define WORLD_CONQUEST_TEK_MAP_REPAINT_3C
    {WCT_NOISE_DELTA}
    {WORLD_CONQUEST_TEK_MAP_DECORATION_3C}
#enddef

#define WORLD_CONQUEST_TEK_MAP_CONSTRUCTOR_DELTA
    ## oasis is a mark for extra land acumulation
    {VRA_SCATTER_FILTER_ALL (
        terrain=W*
        [filter_adjacent_location]
            terrain=Dd^Do, Ds^Vdt
        [/filter_adjacent_location]
    ) "Ds,Ww,Gs,Ww"}
    {VRA_SCATTER_FILTER_ALL (
        terrain=W*,Dd^Do
        [filter_adjacent_location]
            terrain=Dd^Do,Ds^Vdt
        [/filter_adjacent_location]
    ) "Gs,Ww,Wwf,Ww,Ds,Ss,Ww,Ds^Ftd,Ds,Hd,Ww"}
    ## "fill" water inside island border
    ## terrain is replaced for ford, wich works as "mark" to be randomized in map repaint
    ## to create an island shape zone, we define a cross with 2 "axis", and then generate a elipse by keeping constant addition of both distances from axis
    [store_map_dimensions]
        variable=map_data.dim
    [/store_map_dimensions]
    ## vertical axi
    {VARIABLE map_data.top "$($map_data.dim.height/10)"}
    {VARIABLE map_data.bot "$($map_data.dim.height-$map_data.top+1)"}
    {VARIABLE temp_size "$($map_data.dim.width*3/7)"}
    {REPEAT_FROM_TO $temp_size "$($map_data.dim.width-$temp_size+1)" point_i (
        {VARIABLE map_data.zone_y.x "$map_data.zone_y.x|$point_i|,"}
    )}
    {REPEAT_FROM_TO $map_data.top $map_data.bot point_i (
        {VARIABLE map_data.zone_y.y "$map_data.zone_y.y|$point_i|,"}
    )}
    [store_locations]
        x=$map_data.zone_y.x
        [and]
            y=$map_data.zone_y.y
        [/and]
        variable=map_data.axi.y
    [/store_locations]
    ## elipse radius
    {VARIABLE temp_size "$($map_data.dim.height-$temp_size*2)"}
    {VARIABLE map_data.radius "$(($map_data.bot-$map_data.top-$temp_size-1)/2)"}
    ## horizontal axi
    {VARIABLE map_data.top "$($map_data.dim.width/6)"}
    {VARIABLE map_data.bot "$($map_data.dim.width-$map_data.top+1)"}
    {VARIABLE temp_size "$($map_data.dim.height*9/19)"}
    {REPEAT_FROM_TO $temp_size "$($map_data.dim.height-$temp_size+1)" point_i (
        {VARIABLE map_data.zone_x.y "$map_data.zone_x.y|$point_i|,"}
    )}
    {REPEAT_FROM_TO $map_data.top $map_data.bot point_i (
        {VARIABLE map_data.zone_x.x "$map_data.zone_x.x|$point_i|,"}
    )}
    [store_locations]
        x=$map_data.zone_x.x
        [and]
            y=$map_data.zone_x.y
        [/and]
        variable=map_data.axi.x
    [/store_locations]
    ## fill water inside elipse
    {REPEAT_FROM_TO 1 $map_data.radius rad_i (
        [terrain]
            terrain=Wwf
            [and]
                terrain=W*
                [and]
                    find_in=map_data.axi.y
                    radius=$rad_i
                [/and]
                [and]
                    find_in=map_data.axi.x
                    radius="$($map_data.radius-$rad_i+1)"
                [/and]
            [/and]
        [/terrain]
    )}
    {CLEAR_VARIABLE map_data,temp_size}
#enddef

#define WCT_NOISE_DELTA
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Gg
    ) "Gs^Ft,Gs^Ft,Hh,Hh,Hh" 5}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Dd
    ) "Ds^Ftd,Ds^Ftd,Hd,Hd,Hd" 5}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=U*,U*^Uf
    ) "Ur,Uue^Uf,Uue^Dr,Uue" 3}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Mm
    ) "Gs,Gs,Gs,Gs,Hh,Hh,Hh,Gs^Ft,Gs^Ft,Gs^Ft,Gs^Uf" 2}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Hh
    ) "Gs,Gs,Gs,Gs,Gs,Gs,Gs^Ft,Gs^Ft,Gs^Ft,Mm" 2}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Hh
    ) "Gs,Gs,Gs,Gs,Gs,Gg,Hh^Ft,Gs^Ft,Gs^Ft,Gs^Ft,Mm,Gs^Uf" 5}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Hd
    ) "Dd,Dd,Dd,Dd,Dd^Do,Ds^Ftd,Ds^Ftd,Ds^Ftd,Mm,Gs" 2}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Hd
    ) "Dd,Dd,Dd,Dd,Sm,Ds^Ftd,Ds^Ftd,Ds^Ftd,Mm,Hd^Ftd" 5}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Gs^Fp,Gs^Ft,Gg^Fet
    ) "Gs,Gs,Gs,Gs,Gs,Gs,Gg^Fet,Hh,Hh,Hh^Ft" 3}
#enddef

#define WORLD_CONQUEST_TEK_MAP_DECORATION_3C
    [terrain]
        terrain=Ql
        [and]
            terrain=!,Wo
            [not]
                terrain=!,W*
                radius=2
            [/not]
        [/and]
    [/terrain]
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wwf
    ) "Gs,Gg,Hh^Ft,Ss,Ss,Hh,Ss,Mm,Ss,Hh^Uf,Ww,Gg,Ss,Ww,Ss" 2}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wwf
    ) "Ww" 9}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wwf
    ) "Ss,Ss,Ss,Ds^Ftd,Ss,Mm,Ss,Ww,Ss,Hd,Ss,Gs^Uf,Ww,Gg,Ss" 2}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Xuce
    ) "Ww,Hh^Uf" 8}
    [terrain]
        terrain=Ww
        [and]
            terrain=Wo
        [/and]
        [filter_adjacent_location]
            terrain=Wo
            count=0
        [/filter_adjacent_location]
    [/terrain]
    [terrain]
        terrain=Ww
        [and]
            terrain=Wwf
        [/and]
        [filter_adjacent_location]
            terrain=Wo
        [/filter_adjacent_location]
    [/terrain]
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wo
        [filter_adjacent_location]
            terrain=!,Wo,Ww
            count=1-6
        [/filter_adjacent_location]
    ) "Wwr" 10}
    [terrain]
        terrain=Gs
        [and]
            terrain=Dd,Ds,Xuce
        [/and]
        [filter_adjacent_location]
            terrain=Ch,Kh
        [/filter_adjacent_location]
    [/terrain]
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Xuce
        [and]
            terrain=K*^*
            radius=3
        [/and]
    ) "Hh^Uf,Mm,Gg,Gs,Ss,Ds^Ftd,Hh,Hh^Ftp" 2}

    [terrain]
        terrain=Gs
        [and]
            terrain=R*
        [/and]
    [/terrain]
    [terrain]
        terrain=*^Ftp
        layer=overlay
        [and]
            terrain=*^Fp
        [/and]
    [/terrain]

    [terrain]
        terrain=Wwf
        [and]
            terrain=*^B*
        [/and]
    [/terrain]
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Gg,Gs
        [filter_adjacent_location]
            terrain=Wwf
        [/filter_adjacent_location]
    ) "Wwf" 2}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wo
        [filter_adjacent_location]
            terrain=!,Wo,Ww
            count=1-6
        [/filter_adjacent_location]
    ) "Ww,Ds" 10}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wo
        [filter_adjacent_location]
            terrain=!,Wo,Ww,*^V*
            count=1-6
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=*^V*
            count=0
        [/filter_adjacent_location]
    ) "Ww^Vm" 31}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wo
        [filter_adjacent_location]
            terrain=!,Wo,Ww,*^V*
            count=1-6
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=*^V*
            count=0
        [/filter_adjacent_location]
    ) "Ww^Vm" 31}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=G*
        [filter_adjacent_location]
            terrain=Wo
        [/filter_adjacent_location]
    ) "Ds" 10}

    [terrain]
        terrain=Hh
        [and]
            terrain=Hd
        [/and]
        [filter_adjacent_location]
            terrain=H*^F*
        [/filter_adjacent_location]
    [/terrain]

    {VRA_SCATTER_FILTER_ALL (
        terrain=G*^V*
        [filter_adjacent_location]
            terrain=D*^*
        [/filter_adjacent_location]
    ) "Ds^Vdt,Ds^Vda,Ds^Vda,Ds^Vda"}
    {VRA_SCATTER_FILTER_ALL (
        terrain=G*^V*
    ) "Gg^Vc,Gg^Vht,Gs^Vht"}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=D*^Do
    ) "Wwf^Vhs" 6}

    {VRA_SCATTER_FILTER_ALL (
        terrain=Wo
        [filter_adjacent_location]
            terrain=Hd
        [/filter_adjacent_location]
    ) "Ww,Ww,Ds"}

    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wo
        [filter_adjacent_location]
            terrain=Ww,G*^*
        [/filter_adjacent_location]
    ) "Ww" 30}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wo
        [filter_adjacent_location]
            terrain=Ww
        [/filter_adjacent_location]
    ) "Wwr" 40}
    {VRA_SCATTER_FILTER_ALL (
        terrain=*^Do
        [and]
            terrain=Wo
            radius=2
        [/and]
    ) "Ds,Hd,Ss,Wwf,Ds,Ss,Ww,Ds^Do"}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wo
        [filter_adjacent_location]
            terrain=Ss
        [/filter_adjacent_location]
    ) "Ds,Ww" 2}
    [terrain]
        terrain=Ds
        [and]
            terrain=Hh^Uf,G*^Uf,Mm
        [/and]
        [filter_adjacent_location]
            terrain=Wo
        [/filter_adjacent_location]
    [/terrain]
    [terrain]
        terrain=Hh
        [and]
            terrain=Hd
        [/and]
        [filter_adjacent_location]
            terrain=D*^*,Hd
            count=0
        [/filter_adjacent_location]
    [/terrain]
    [terrain]
        terrain=Hh
        [and]
            terrain=Hd
        [/and]
        [filter_adjacent_location]
            terrain=Ch,Kh
        [/filter_adjacent_location]
    [/terrain]
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wo
        [filter_adjacent_location]
            terrain=Ch,Kh
            adjacent=nw
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=W*^*
            adjacent=se
        [/filter_adjacent_location]
    ) "Ds,Ww^Bw\,Gs" 2}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wo
        [filter_adjacent_location]
            terrain=Ch,Kh
            adjacent=sw,ne
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=W*^*
            adjacent=sw,ne
        [/filter_adjacent_location]
    ) "Ds,Ww^Bw/,Gs" 2}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wo
        [filter_adjacent_location]
            terrain=Ch,Kh
            adjacent=se
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=W*^*
            adjacent=nw
        [/filter_adjacent_location]
    ) "Ds,Ww^Bw\,Gs" 2}
    {VRA_SCATTER_FILTER_ALL (
        terrain=Wo
        [filter_adjacent_location]
            terrain=Ch,Kh
        [/filter_adjacent_location]
    ) "Ds,Gs,Ww"}

    [terrain]
        terrain=Ds
        [and]
            terrain=Dd
        [/and]
        [filter_adjacent_location]
            terrain=W*^*
        [/filter_adjacent_location]
    [/terrain]
    [terrain]
        terrain=Ss^Uf
        [and]
            terrain=Hh^Uf
        [/and]
        [filter_adjacent_location]
            terrain=Ss
        [/filter_adjacent_location]
    [/terrain]
    [terrain]
        terrain=Sm^Uf
        [and]
            terrain=Hh^Uf
        [/and]
        [filter_adjacent_location]
            terrain=D*^*,Hd*^*
            count=6
        [/filter_adjacent_location]
    [/terrain]
    {VRA_SCATTER_FILTER_ALL (
        terrain=Xuce
        [filter_adjacent_location]
            terrain=Xuce
            count=3-6
        [/filter_adjacent_location]
    ) "Uue,Uue,Uue,Uue,Ds,Ww,Uue^Dr,Sm"}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Ds,Hd,Dd,Hh,Mm,Ss
        [filter_adjacent_location]
            terrain=Gg,Gs
        [/filter_adjacent_location]
        [not]
            terrain=Ds
            [and]
                terrain=Wo
                radius=2
            [/and]
        [/not]
    ) "Gs,Gs,Gg" 30}

    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wo,Ww
        [filter_adjacent_location]
            terrain=Ch,Kh
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=W*^V*,Wwr,W*^B*
            count=0
        [/filter_adjacent_location]
    ) "Ds,Gs" 2}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wo
        [filter_adjacent_location]
            terrain=G*^*,C*,K*,H*^V*,M*^V*
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=*^B*
            count=0
        [/filter_adjacent_location]
    ) "Ds^Esd,Ds,Ds,Ds^Esd,Ds,Ds,Ds^Esd,Ds,Ds,Dd^Do,Ds,Ds,Ds^Ftd" 2}
    {WCT_MAP_REDUCE_CASTLE_EXPANDING_RECRUIT Ce Gs}
    ## random sandbank
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wo
        [filter_adjacent_location]
            terrain=!,Wo
            count=0
        [/filter_adjacent_location]
    ) "Ww" 35}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wo
        [filter_adjacent_location]
            terrain=!,Wo,Ww*^*
            count=0
        [/filter_adjacent_location]
    ) "Ds" 45}

    {RANDOM 0..1}
    [if]
        {VARIABLE_CONDITIONAL random greater_than 0}
        [then]
            {WCT_CHANGE_MAP_WATER t}
        [/then]
    [/if]
#enddef

#define WCT_MAP_3C_POST_BUNUS_DECORATION
    {WCT_MAP_CAVE_PATH_TO Re}
    [terrain]
        terrain=Ds
        [and]
            terrain=Ql
        [/and]
    [/terrain]
#enddef
