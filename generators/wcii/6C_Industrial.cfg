#textdomain wesnoth-Vaelia_Random_Adventures

## Industrial

#define WORLD_CONQUEST_TEK_MAP_POSTGENERATION_6C
    {WORLD_CONQUEST_TEK_MAP_REPAINT_6C_UTILITY_EVENTS}
    [event]
        name=prestart
        {WORLD_CONQUEST_TEK_MAP_REPAINT_6C}
    [/event]
    [event]
        name=start
        {CLEAR_VARIABLE wcii}
    [/event]
#enddef

#define WORLD_CONQUEST_TEK_MAP_REPAINT_6C_UTILITY_EVENTS
    {WCT_ROADS_TO_RIVER_INDUSTRY_EVENTS}
    {WCT_ROADS_TO_FACTORY_EVENTS}
    {WCT_ROADS_TO_INDUSTRIAL_CITY_EVENTS}
    {WCT_ROADS_TO_INDUSTRIAL_VILLAGE_EVENTS}
    {WCT_RAILS_TO_INDUSTRIAL_KEEP_EVENTS}
#enddef

#define WORLD_CONQUEST_TEK_MAP_REPAINT_6C
    {WCT_MAP_REDUCE_CASTLE_EXPANDING_RECRUIT Ce Wwf}
    [terrain]
        terrain=Ch
        [and]
            terrain=Ce
        [/and]
    [/terrain]
    ## soft hills clusters
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Hh,Hh^F*,Hh^Uf
        [filter_adjacent_location]
            terrain=H*^*,M*^*,C*,K*^*
            count=6
        [/filter_adjacent_location]
    ) "Gs,Gs,Gg,Gs,Gs,Gg,Gs,Gs,Gg,Gs,Gs,Gg,Hh^Fp" 2}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Ha,Ha^F*
        [filter_adjacent_location]
            terrain=H*^*,M*^*,C*,K*^*
            count=6
        [/filter_adjacent_location]
    ) "Gs,Aa^Fma,Wwf,Aa,Aa" 2}

    {WORLD_CONQUEST_TEK_MAP_DECORATION_6C}

    {WCT_REDUCE_WALL_CLUSTERS (Uu,Uu^Uf,Uh,Uu^Uf,Uu,Uu^Uf,Uh,Ql,Qxu,Xu,Uu,Rb)}
    {WCT_FILL_LAVA_CHASMS}
    {WCT_VOLCANOS}
    {WCT_VOLCANOS_DIRT}
    ## volcanos dry mountains
    [terrain]
        terrain=Md
        layer=base
        [and]
            terrain=Mm^*
            [and]
                terrain=Mv
                radius=2
            [/and]
        [/and]
    [/terrain]
    ## lava dry mountains
    [terrain]
        terrain=Md
        layer=base
        [and]
            terrain=Mm*^*
            [and]
                terrain=Ql
                radius=1
            [/and]
        [/and]
    [/terrain]
    ## decoration fix to first intended
    [terrain]
        terrain=Rb
        layer=base
        [and]
            terrain=Urb^*
        [/and]
    [/terrain]
#enddef

#define WORLD_CONQUEST_TEK_MAP_DECORATION_6C
    ## industrial villages near river and road
    [terrain]
        terrain=Hhd^Vud
        [and]
            terrain=H*^V*
            [filter_adjacent_location]
                terrain=Urb,Ww
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    [terrain]
        terrain=Urb^Vud
        [and]
            terrain=G*^V*,D*^V*
            [filter_adjacent_location]
                terrain=Urb^*
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    [terrain]
        terrain=Gs^Vud
        [and]
            terrain=G*^V*,D*^V*
            [filter_adjacent_location]
                terrain=Ww
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    ## expand infrastructure of industrial villages near river
    {WCT_INDUSTRY_BRIDGE \ nw,se}
    {WCT_INDUSTRY_BRIDGE / ne,sw}
    {WCT_INDUSTRY_BRIDGE | n,s}
    {WCT_ITERATE_ROADS_TO river_industry 3}
    [terrain]
        terrain=Urb
        [and]
            terrain=Re,Rp
        [/and]
    [/terrain]
    [terrain]
        terrain=*^Bcx\
        layer=overlay
        [and]
            terrain=*^Bw\
        [/and]
    [/terrain]
    [terrain]
        terrain=*^Bcx/
        layer=overlay
        [and]
            terrain=*^Bw/
        [/and]
    [/terrain]
    [terrain]
        terrain=*^Bcx|
        layer=overlay
        [and]
            terrain=*^Bw|
        [/and]
    [/terrain]
    {WCT_ITERATE_ROADS_TO river_industry 4}
    [terrain]
        terrain=Urb
        layer=base
        [and]
            terrain=Rr,Rp,Re,Gs^Vud
        [/and]
    [/terrain]
    ## expand infrastructure to factories
    [terrain]
        terrain=*^Vhh
        layer=overlay
        [and]
            terrain=*^Vh
        [/and]
        [and]
            terrain=C*,K*^*,Urb^*
            radius=5
            [filter_radius]
                terrain=!,W*^*
            [/filter_radius]
        [/and]
    [/terrain]
    {WCT_ITERATE_ROADS_TO factory 4}
    [terrain]
        terrain=Rr^Vhh
        [and]
            terrain=G*^Vhh
        [/and]
    [/terrain]
    [terrain]
        terrain=Hhd^Vhh
        [and]
            terrain=H*^Vhh
        [/and]
    [/terrain]
    ## expand infrastructure to cities
    [terrain]
        terrain=*^Vhc
        layer=overlay
        [and]
            terrain=*^Vh
        [/and]
        [and]
            terrain=C*,K*^*,Urb^*,Rr^*
            radius=6
            [filter_radius]
                terrain=!,W*^*
            [/filter_radius]
        [/and]
    [/terrain]
    [terrain]
        terrain=Rrc^Vhc
        [and]
            terrain=G*^Vhc
        [/and]
    [/terrain]
    {WCT_ITERATE_ROADS_TO industrial_city 5}
    ## sawmills
    [terrain]
        terrain=*^Vl
        layer=overlay
        [and]
            terrain=*^Vh
        [/and]
        [filter_adjacent_location]
            terrain=*^F*
        [/filter_adjacent_location]
    [/terrain]
    [terrain]
        terrain=Rb^Vl
        [and]
            terrain=G*^Vl
        [/and]
    [/terrain]
    ## villages
    [terrain]
        terrain=*^Ve
        layer=overlay
        [and]
            terrain=*^Vh
        [/and]
        [and]
            terrain=C*,K*^*,Urb^*,Rr*^*
            radius=4
            [filter_radius]
                terrain=!,W*^*
            [/filter_radius]
        [/and]
    [/terrain]
    [terrain]
        terrain=Rb^Ve
        [and]
            terrain=G*^Ve
        [/and]
    [/terrain]
    ## expand infrastructure to villages and sawmills
    {WCT_ITERATE_ROADS_TO industrial_village 3}
    ## castle rails
    [terrain]
        terrain=Rr^Br|
        [and]
            terrain=Rr
        [/and]
        [and]
            terrain=K*^*
            radius=8
            [filter_radius]
                terrain=Rr,C*,K*^*
            [/filter_radius]
        [/and]
    [/terrain]
    {WCT_ITERATE_ROADS_TO industrial_keep 3}
    [terrain]
        terrain=Rr^Br\
        layer=overlay
        [and]
            terrain=*^Br|
        [/and]
        [filter_adjacent_location]
            terrain=*^Vhh
            count=1-2
            adjacent=nw,se
        [/filter_adjacent_location]
    [/terrain]
    [terrain]
        terrain=Rr^Br/
        layer=overlay
        [and]
            terrain=*^Br|
        [/and]
        [filter_adjacent_location]
            terrain=*^Vhh
            count=1-2
            adjacent=ne,sw
        [/filter_adjacent_location]
    [/terrain]
    {WCT_CONECT_FACTORY_RAILS}
    ## muddy rivers
    [store_map_dimensions]
        variable=map_data
    [/store_map_dimensions]
    [terrain]
        terrain=Sm
        layer=base
        [and]
            terrain=Ww^*
            [and]
                terrain=Wwt,Wot
                radius=2
                [filter_radius]
                    terrain=Ww^*,C*,K*^*
                [/filter_radius]
            [/and]
        [/and]
    [/terrain]
    [store_locations]
        terrain=Sm^*
        [filter_adjacent_location]
            terrain=Ww^*
        [/filter_adjacent_location]
        variable=wcii.terrain_to_change
    [/store_locations]
    {FOREACH wcii.terrain_to_change swamp_i}
        {RANDOM 3.."$($map_data.width/4)"}
        [terrain]
            terrain=Sm
            layer=base
            [and]
                terrain=Ww^*
                [and]
                    x=$wcii.terrain_to_change[$swamp_i].x
                    y=$wcii.terrain_to_change[$swamp_i].y
                    radius=$random
                    [filter_radius]
                        terrain=Ww^*,C*,K*^*
                    [/filter_radius]
                [/and]
            [/and]
        [/terrain]
    {NEXT swamp_i}
    ## dirty rivers
    [store_locations]
        terrain=Sm^*
        [filter_adjacent_location]
            terrain=Ww^*
        [/filter_adjacent_location]
        variable=wcii.terrain_to_change
    [/store_locations]
    {FOREACH wcii.terrain_to_change water_i}
        {RANDOM 4.."$($map_data.width/6)"}
        [terrain]
            terrain=Wwg
            layer=base
            [and]
                terrain=Ww^*
                [and]
                    x=$wcii.terrain_to_change[$water_i].x
                    y=$wcii.terrain_to_change[$water_i].y
                    radius=$random
                    [filter_radius]
                        terrain=Ww^*,C*,K*^*
                    [/filter_radius]
                [/and]
            [/and]
        [/terrain]
    {NEXT water_i}
    ## fords
    {RANDOM 4.."$($map_data.width/10)"}
    [terrain]
        terrain=Wwf
        layer=base
        [and]
            terrain=Ww^*
            [not]
                terrain=Wwg^*
                radius=$random
                [filter_radius]
                    terrain=Ww^*,C*,K*^*
                [/filter_radius]
            [/not]
        [/and]
    [/terrain]
    {CLEAR_VARIABLE map_data}
    ## narrow rivers
    {WCT_FORD_DELTAS}
    {WCT_DIRTY_DELTAS}
    ## detritus on sand
    {VRA_SCATTER_FILTER_ALL (
        terrain=Dd
        [filter_adjacent_location]
            terrain=Sm,*^Vud
        [/filter_adjacent_location]
    ) "Dd,Dd,Dd,Dd,Dd,Dd^Edt"}
    {VRA_SCATTER_FILTER_ALL (
        terrain=Ds
        [filter_adjacent_location]
            terrain=Sm,*^Vud
        [/filter_adjacent_location]
    ) "Ds,Ds,Ds^Edt"}
    ## reefs
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wot,Wwt
        [filter_adjacent_location]
            terrain=Wwt,G*^*,M*^*,H*^*
        [/filter_adjacent_location]
        [not]
            terrain=Sm
            radius=4
        [/not]
    ) "Wwr" 15}
    ## beachs sand and stones
    {VRA_SCATTER_FILTER_FRAC_RAND (
        terrain=Ds
        [filter_adjacent_location]
            terrain=Wwt,Wot
        [/filter_adjacent_location]
    ) "Ds^Esd" "9..11"}
    ## extra rough near clean water
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=G*^*
        [and]
            terrain=Wwf
            radius=2
        [/and]
    ) "Hh" 6 LAYER="base"}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Hh,G*
        [and]
            terrain=Wwf
            radius=3
            [or]
                terrain=Ww^*
                radius=2
            [/or]
        [/and]
    ) "*^Fp,*^Fp,*^Fp,*^Fms,*^Fms,*^Fmf,*^Fmf,*^Uf,*^Fds,*^Fms,*^Fms,*^Fet,*^Efm,*" 5 LAYER="overlay"}
    [terrain]
        terrain=*^Em
        layer=overlay
        [and]
            terrain=H*^Efm,Gd^Efm
        [/and]
    [/terrain]
    ## fix ocean water type
    [terrain]
        terrain=Rd
        [and]
            terrain=Wwt,Wot
        [/and]
        [filter_adjacent_location]
            terrain=Sm
        [/filter_adjacent_location]
    [/terrain]
    [terrain]
        terrain=Ww
        layer=base
        [and]
            terrain=Wwt^*
        [/and]
    [/terrain]
    [terrain]
        terrain=Wo
        [and]
            terrain=Wot
        [/and]
    [/terrain]
    [terrain]
        terrain=Wwg
        [and]
            terrain=Sm
            [not]
                terrain=*^V*,C*,K*^*
                radius=999
                [filter_radius]
                    terrain=Sm^*,Wwg
                [/filter_radius]
            [/not]
        [/and]
    [/terrain]
    [terrain]
        terrain=Wwg
        [and]
            terrain=Rd
        [/and]
    [/terrain]
    ## castle kinds
    [terrain]
        terrain=Cud
        layer=base
        [and]
            terrain=Ch^*
            [and]
                terrain=K*^*,Sm,Wwg
                radius=5
                [filter_radius]
                    terrain=C*^*,Sm,Wwg,K*^*
                [/filter_radius]
            [/and]
        [/and]
    [/terrain]
    [terrain]
        terrain=Chw
        [and]
            terrain=Ch
        [/and]
    [/terrain]
    ## industry damages landscape
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=G*^*
        [filter_adjacent_location]
            terrain=Urb,*^Vud
        [/filter_adjacent_location]
    ) "Re,Gd" 1 LAYER="base"}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=G*
        [filter_adjacent_location]
            terrain=*^Vl
        [/filter_adjacent_location]
    ) "Re,Gd,Gs" 1 LAYER="base"}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=G*^*
        [filter_adjacent_location]
            terrain=Rr^*,*^Vhh,Cud^*,Ch^*
        [/filter_adjacent_location]
    ) "Gs,Gs,Gs,Gd" 2 LAYER="base"}
    [terrain]
        terrain=Gd
        layer=base
        [and]
            terrain=G*^*
        [/and]
        [filter_adjacent_location]
            terrain=Re
        [/filter_adjacent_location]
    [/terrain]
    [terrain]
        terrain=Gs
        layer=base
        [and]
            terrain=Gg*^*
        [/and]
        [filter_adjacent_location]
            terrain=Gd*^*
        [/filter_adjacent_location]
    [/terrain]
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Hh^*
        [filter_adjacent_location]
            terrain=Urb,*^Vud
        [/filter_adjacent_location]
    ) "Hhd,Hhd,Hhd,Hhd,Hhd^Dr" 2 LAYER="base"}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Hh
        [and]
            terrain=*^Vud
            radius=2
        [/and]
    ) "Gd^Dr,Gd^Edt,Hhd^Edt,Hhd,Hhd,Hhd,Hhd,Hhd^Dr" 2}
    ## rough extra terrain noise
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=G*
        [filter_adjacent_location]
            terrain=Sm^*,C*^*,K*^*,W*^*,*^V*,Ds
            count=0
        [/filter_adjacent_location]
    ) "Gs^Fp,Gs^Fp,Gs^Fp,Gs^Fp,Gs^Fp,Gs^Fmw,Gs^Fmf,Hh^Fp,Hh,Hh,Mm,Mm,Gs^Uf" 15}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=G*
        [filter_adjacent_location]
            terrain=Sm^*,C*^*,K*^*,W*^*,*^V*,Ds
            count=0
        [/filter_adjacent_location]
        [and]
            terrain=Urb
            radius=2
        [/and]
    ) "Ch" 20}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Hh
    ) "Hh^Fp,Hh^Fp,Hh^Fp,Hh^Fp,Hh^Fmw" 24}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Dd
    ) "Hd" 10}
    ## cave path
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Uh,Uu
    ) "Rb" 20}
    ## difumine dry border
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Gd^*
        [filter_adjacent_location]
            terrain=Gs^*
        [/filter_adjacent_location]
    ) "Gs" 11 LAYER="base"}
    [terrain]
        terrain=*^Fdw
        layer=overlay
        [and]
            terrain=Gd^Fet,Re^Fet
        [/and]
    [/terrain]
#enddef

#define WCT_INDUSTRY_BRIDGE BRIDGE DIRECTIONS
    [terrain]
        terrain=*^Bw{BRIDGE}
        layer=overlay
        [and]
            terrain=Ww,
            [filter_adjacent_location]
                terrain=*^Vud
                count=1
                adjacent={DIRECTIONS}
            [/filter_adjacent_location]
            [filter_adjacent_location]
                terrain=Urb,G*,C*,K*^*,A*
                count=1
                adjacent={DIRECTIONS}
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    [terrain]
        terrain=Rr
        [and]
            terrain=G*,A*
            [filter_adjacent_location]
                terrain=*^Bw{BRIDGE}
                count=1-2
                adjacent={DIRECTIONS}
            [/filter_adjacent_location]
        [/and]
    [/terrain]
#enddef

#define WCT_ROADS_TO_RIVER_INDUSTRY_EVENTS
    [event]
        name=wct_store_roads_river_industry
        id=wct_store_roads_river_industry
        first_time_only=no
        [store_locations]
            terrain=!,W*^*,*^V*,*^Bcx*,Urb,C*,K*^*,R*
            [filter_adjacent_location]
                terrain=*^Vud,Re,Rr
                [not]
                    terrain=K*^*
                    radius=999
                    [filter_radius]
                        terrain=Urb^*,*^Bcx*,C*,K*^*,*^V*,R*
                    [/filter_radius]
                [/not]
                [not]
                    terrain=C*,K*^*,Urb^*
                    radius=$radius
                    [filter_radius]
                        terrain=!,W*^*
                    [/filter_radius]
                [/not]
                [filter_adjacent_location]
                    terrain=Re,Rr
                    [and]
                        terrain=C*,K*^*,Urb^*
                        radius=$radius
                        [filter_radius]
                            terrain=!,W*^*
                        [/filter_radius]
                    [/and]
                    count=0
                [/filter_adjacent_location]
            [/filter_adjacent_location]
            [and]
                terrain=C*,K*^*,Urb^*
                radius=$radius
                [filter_radius]
                    terrain=!,W*^*
                [/filter_radius]
            [/and]
            variable=wcii.terrain_to_change
        [/store_locations]
    [/event]
    {WCT_CREATE_EVENT_ROADS_TO river_industry Re}
#enddef

#define WCT_ROADS_TO_FACTORY_EVENTS
    [event]
        name=wct_store_roads_factory
        id=wct_store_roads_factory
        first_time_only=no
        [store_locations]
            terrain=!,W*^*,*^V*,*^Bcx*,Urb,C*,K*^*,R*
            [filter_adjacent_location]
                terrain=*^Vhh,Rr
                [not]
                    terrain=C*,K*^*,Urb^*
                    radius=$radius
                    [filter_radius]
                        terrain=!,W*^*
                    [/filter_radius]
                [/not]
                [filter_adjacent_location]
                    terrain=Rr
                    [and]
                        terrain=C*,K*^*,Urb^*
                        radius=$radius
                        [filter_radius]
                            terrain=!,W*^*
                        [/filter_radius]
                    [/and]
                    count=0
                [/filter_adjacent_location]
            [/filter_adjacent_location]
            [and]
                terrain=C*,K*^*,Urb^*
                radius=$radius
                [filter_radius]
                    terrain=!,W*^*
                [/filter_radius]
            [/and]
            variable=wcii.terrain_to_change
        [/store_locations]
    [/event]
    {WCT_CREATE_EVENT_ROADS_TO factory Rr}
#enddef

#define WCT_ROADS_TO_INDUSTRIAL_CITY_EVENTS
    [event]
        name=wct_store_roads_industrial_city
        id=wct_store_roads_industrial_city
        first_time_only=no
        [store_locations]
            terrain=!,W*^*,*^V*,*^Bcx*,Urb,C*,K*^*,R*
            [filter_adjacent_location]
                terrain=*^Vhc,Rrc
                [not]
                    terrain=C*,K*^*,Urb^*,Rr^*,*^Vhh
                    radius=$radius
                    [filter_radius]
                        terrain=!,W*^*
                    [/filter_radius]
                [/not]
                [filter_adjacent_location]
                    terrain=Rrc
                    [and]
                        terrain=C*,K*^*,Urb^*,Rr^*,*^Vhh
                        radius=$radius
                        [filter_radius]
                            terrain=!,W*^*
                        [/filter_radius]
                    [/and]
                    count=0
                [/filter_adjacent_location]
            [/filter_adjacent_location]
            [and]
                terrain=C*,K*^*,Urb^*,Rr^*,*^Vhh
                radius=$radius
                [filter_radius]
                    terrain=!,W*^*
                [/filter_radius]
            [/and]
            variable=wcii.terrain_to_change
        [/store_locations]
    [/event]
    {WCT_CREATE_EVENT_ROADS_TO industrial_city Rrc}
#enddef

#define WCT_ROADS_TO_INDUSTRIAL_VILLAGE_EVENTS
    [event]
        name=wct_store_roads_industrial_village
        id=wct_store_roads_industrial_village
        first_time_only=no
        [store_locations]
            terrain=!,W*^*,*^V*,*^Bcx*,Urb,C*,K*^*,R*
            [filter_adjacent_location]
                terrain=*^Ve,*^Vl,Rb
                [not]
                    terrain=C*,K*^*,Urb^*,Rr*^*,*^Vhh,*^Vhc
                    radius=$radius
                    [filter_radius]
                        terrain=!,W*^*
                    [/filter_radius]
                [/not]
                [filter_adjacent_location]
                    terrain=Rb
                    [and]
                        terrain=C*,K*^*,Urb^*,Rr*^*,*^Vhh,*^Vhc
                        radius=$radius
                        [filter_radius]
                            terrain=!,W*^*
                        [/filter_radius]
                    [/and]
                    count=0
                [/filter_adjacent_location]
            [/filter_adjacent_location]
            [and]
                terrain=C*,K*^*,Urb^*,Rr*^*,*^Vhh,*^Vhc
                radius=$radius
                [filter_radius]
                    terrain=!,W*^*
                [/filter_radius]
            [/and]
            variable=wcii.terrain_to_change
        [/store_locations]
    [/event]
    {WCT_CREATE_EVENT_ROADS_TO industrial_village Rb}
#enddef

#define WCT_RAILS_TO_INDUSTRIAL_KEEP_EVENTS
    [event]
        name=wct_store_roads_industrial_keep
        id=wct_store_roads_industrial_keep
        first_time_only=no
        [store_locations]
            terrain=C*
            [filter_adjacent_location]
                terrain=*^Br*,*^Vhh
                [not]
                    terrain=K*^*
                    radius=$radius
                    [filter_radius]
                        terrain=C*,*^Br*,*^Vhh
                    [/filter_radius]
                [/not]
                [filter_adjacent_location]
                    terrain=*^Br*,*^Vhh
                    [and]
                        terrain=K*^*
                        radius=$radius
                        [filter_radius]
                            terrain=C*,*^Br*,*^Vhh
                        [/filter_radius]
                    [/and]
                    count=0
                [/filter_adjacent_location]
            [/filter_adjacent_location]
            [and]
                terrain=K*^*
                radius=$radius
                [filter_radius]
                    terrain=C*,*^Br*,*^Vhh
                [/filter_radius]
            [/and]
            variable=wcii.terrain_to_change
        [/store_locations]
    [/event]
    {WCT_CREATE_EVENT_ROADS_TO industrial_keep Cud^Br|}
#enddef

#define WCT_STORE_POSSIBLE_FORD_DELTA
    [store_locations]
        terrain=Wwf
        [filter_adjacent_location]
            terrain=W*^*
            count=5-6
        [/filter_adjacent_location]
        variable=wcii.terrain_to_change
    [/store_locations]
#enddef

#define WCT_FORD_DELTAS
    {WCT_STORE_POSSIBLE_FORD_DELTA}
    [while]
        [variable]
            name=wcii.terrain_to_change.length
            greater_than=0
        [/variable]
        [do]
            {RANDOM Gg,Gg^Efm,Mm,Gg^Fet,Gg,Mm,Gg}
            [terrain]
                terrain=$random
                x,y=$wcii.terrain_to_change.x,$wcii.terrain_to_change.y
            [/terrain]
            {WCT_STORE_POSSIBLE_FORD_DELTA}
        [/do]
    [/while]
#enddef

#define WCT_STORE_POSSIBLE_DIRTY_DELTA
    [store_locations]
        terrain=Wwg,Sm
        [filter_adjacent_location]
            terrain=Wwg^*,Sm^*
            count=5-6
        [/filter_adjacent_location]
        variable=wcii.terrain_to_change
    [/store_locations]
#enddef

#define WCT_DIRTY_DELTAS
    {WCT_STORE_POSSIBLE_DIRTY_DELTA}
    [while]
        [variable]
            name=wcii.terrain_to_change.length
            greater_than=0
        [/variable]
        [do]
            {RANDOM Gs,Hh^Uf,Cud,Gs^Uf,Gs,Hh,Ds^Edt,Ds,Hh^Fmf,Gs,Gs^Fmf}
            [terrain]
                terrain=$random
                x,y=$wcii.terrain_to_change.x,$wcii.terrain_to_change.y
            [/terrain]
            {WCT_STORE_POSSIBLE_DIRTY_DELTA}
        [/do]
    [/while]
#enddef

#define WCT_CONECT_FACTORY_RAILS
    [store_locations]
        terrain=*^Br*
        [filter_adjacent_location]
            terrain=*^Vhh
        [/filter_adjacent_location]
        variable=rails_conected
    [/store_locations]
    [while]
        [have_location]
            [not]
                find_in=rails_conected
            [/not]
            terrain=*^Br*
            [filter_adjacent_location]
                find_in=rails_conected
            [/filter_adjacent_location]
        [/have_location]
        [do]
            [terrain]
                terrain=*^Br|
                layer=overlay
                [not]
                    find_in=rails_conected
                [/not]
                [filter_adjacent_location]
                    find_in=rails_conected
                    adjacent=n,s
                [/filter_adjacent_location]
                [and]
                    terrain=*^Br*
                [/and]
            [/terrain]
            [terrain]
                terrain=*^Br\
                layer=overlay
                [not]
                    find_in=rails_conected
                [/not]
                [not]
                    [filter_adjacent_location]
                        terrain=*^Br\
                        adjacent=ne,sw
                    [/filter_adjacent_location]
                [/not]
                [filter_adjacent_location]
                    find_in=rails_conected
                    adjacent=nw,se
                [/filter_adjacent_location]
                [and]
                    terrain=*^Br*
                [/and]
            [/terrain]
            [terrain]
                terrain=*^Br/
                layer=overlay
                [not]
                    find_in=rails_conected
                [/not]
                [not]
                    [filter_adjacent_location]
                        terrain=*^Br/
                        adjacent=nw,se
                    [/filter_adjacent_location]
                [/not]
                [filter_adjacent_location]
                    find_in=rails_conected
                    adjacent=ne,sw
                [/filter_adjacent_location]
                [and]
                    terrain=*^Br*
                [/and]
            [/terrain]
            [store_locations]
                terrain=*^Br*
                [and]
                    find_in=rails_conected
                    radius=1
                [/and]
                variable=rails_conected
            [/store_locations]
        [/do]
    [/while]
    {CLEAR_VARIABLE rails_conected}
    [terrain]
        terrain=*^Br|
        layer=overlay
        [and]
            terrain=*^Br\,*^Br/
            [filter_adjacent_location]
                terrain=*^Br\,*^Br/
                adjacent=n,s
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    [terrain]
        terrain=*^Br/
        layer=overlay
        [and]
            terrain=*^Br|
            [filter_adjacent_location]
                terrain=*^Br|
                adjacent=ne
            [/filter_adjacent_location]
            [filter_adjacent_location]
                terrain=*^Br|
                adjacent=n,s
                count=0-1
            [/filter_adjacent_location]
            [filter_adjacent_location]
                terrain=*^Vhh
                adjacent=n,s
                count=0
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    [terrain]
        terrain=*^Br\
        layer=overlay
        [and]
            terrain=*^Br|
            [filter_adjacent_location]
                terrain=*^Br|
                adjacent=nw
            [/filter_adjacent_location]
            [filter_adjacent_location]
                terrain=*^Br|
                adjacent=n,s
                count=0-1
            [/filter_adjacent_location]
            [filter_adjacent_location]
                terrain=*^Vhh
                adjacent=n,s
                count=0
            [/filter_adjacent_location]
        [/and]
    [/terrain]
#enddef
