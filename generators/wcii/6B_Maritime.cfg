#textdomain wesnoth-Vaelia_Random_Adventures

## Maritime

#define WORLD_CONQUEST_TEK_MAP_POSTGENERATION_6B
    {WORLD_CONQUEST_TEK_MAP_REPAINT_6B_UTILITY_EVENTS}
    [event]
        name=prestart
        {WORLD_CONQUEST_TEK_MAP_NOISE_MARITIME}
        {WORLD_CONQUEST_TEK_MAP_REPAINT_6B}
    [/event]
    [event]
        name=start
        {CLEAR_VARIABLE wcii}
    [/event]
#enddef

#define WORLD_CONQUEST_TEK_MAP_REPAINT_6B_UTILITY_EVENTS
    {WCT_ROADS_TO_DOCK_EVENTS}
    {WCT_ROADS_TO_RIVER_EVENTS}
#enddef

#define WORLD_CONQUEST_TEK_MAP_REPAINT_6B
    {WCT_REDUCE_WALL_CLUSTERS (Uu,Uu^Uf,Uh,Uu^Uf,Uu,Uu^Uf,Uh,Ql,Qxu,Xu,Uu,Ur)}
    {WCT_FILL_LAVA_CHASMS}
    {WCT_VOLCANOS}
    {WORLD_CONQUEST_TEK_MAP_DECORATION_6B}
    {WCT_VOLCANOS_DIRT}
    ## volcanos dry mountains
    [terrain]
        terrain=Md
        layer=base
        [and]
            terrain=Mm^*
            [and]
                terrain=Mv
                radius=2
            [/and]
        [/and]
    [/terrain]
    ## lava dry mountains
    [terrain]
        terrain=Md
        layer=base
        [and]
            terrain=Mm*^*
            [and]
                terrain=Ql
                radius=1
            [/and]
        [/and]
    [/terrain]
    ## dirt beachs far from docks
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Ds
        [filter_adjacent_location]
            terrain=Wwg,Wog
        [/filter_adjacent_location]
        [not]
            terrain=*^Vl
            radius=6
        [/not]
    ) "Ds^Esd" 10}
    {WCT_MAP_CAVE_PATH_TO Rb}
    {WCT_NOISE_SNOW_TO Rb}
#enddef

#define WORLD_CONQUEST_TEK_MAP_DECORATION_6B
    ## rich terrain around rivers
    [terrain]
        terrain=*^Vhc
        layer=overlay
        [and]
            terrain=H*^V*
            [filter_adjacent_location]
                terrain=Ww
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    [terrain]
        terrain=Rp^Vhc
        [and]
            terrain=G*^V*
            [filter_adjacent_location]
                terrain=Ww
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    [terrain]
        terrain=Gg
        layer=base
        [and]
            terrain=G*^*
            [filter_adjacent_location]
                terrain=Ww
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Gs^*,Gd^*
        [and]
            terrain=Ww
            radius=2
        [/and]
    ) "Gg" 3 LAYER="base"}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Gs^*,Gd^*
        [and]
            terrain=Ww
            radius=3
        [/and]
    ) "Gg" 3 LAYER="base"}
    [terrain]
        terrain=Gs*^*
        layer=base
        [and]
            terrain=Gd*^*
            [and]
                terrain=Ww
                radius=3
            [/and]
        [/and]
    [/terrain]
    ## generate big docks villages
    [terrain]
        terrain=Iwr^Vl
        [and]
            terrain=*^V*
            [and]
                terrain=Ch,Kh*^*
                radius=4
            [/and]
        [/and]
        [filter_adjacent_location]
            terrain=W*^*
            count=1-5
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Wog,Wwg
        [/filter_adjacent_location]
    [/terrain]
    {WCT_ITERATE_ROADS_TO dock 3}
    {WCT_ITERATE_ROADS_TO river 3}
    [if]
        [not]
            [have_location]
                terrain=Iwr^Vl
            [/have_location]
        [/not]
        [then]
            [store_locations]
                terrain=*^V*
                [filter_adjacent_location]
                    terrain=W*^*
                    count=2-5
                [/filter_adjacent_location]
                [filter_adjacent_location]
                    terrain=Wog,Wwg
                [/filter_adjacent_location]
                variable=wcii.terrain_to_change
            [/store_locations]
            {RANDOM_INDEX wcii.terrain_to_change}
            [terrain]
                terrain=Iwr^Vl
                x=$wcii.terrain_to_change[$random].x
                y=$wcii.terrain_to_change[$random].y
            [/terrain]
        [/then]
    [/if]
    {VRA_SCATTER_FILTER_ALL (
        terrain=Wog,Wwg
        [filter_adjacent_location]
            terrain=Wog,Wwg
            adjacent=se,nw
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Iwr^Vl
            adjacent=se,nw
        [/filter_adjacent_location]
    ) "Wwg,Iwr,Wwg^Bw\,Wwg^Bw\,Wwg^Bw\,Wwg^Bw\"}
    {VRA_SCATTER_FILTER_ALL (
        terrain=Wog,Wwg
        [filter_adjacent_location]
            terrain=Wog,Wwg
            adjacent=sw,ne
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Iwr^Vl
            adjacent=sw,ne
        [/filter_adjacent_location]
    ) "Wwg,Iwr,Wwg^Bw/,Wwg^Bw/,Wwg^Bw/,Wwg^Bw/"}
    {VRA_SCATTER_FILTER_ALL (
        terrain=Wog,Wwg
        [filter_adjacent_location]
            terrain=Wog,Wwg
            adjacent=s,n
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Iwr^Vl
            adjacent=s,n
        [/filter_adjacent_location]
    ) "Wwg,Iwr,Wwg^Bw|,Wwg^Bw|,Wwg^Bw|,Wwg^Bw|"}
    {VRA_SCATTER_FILTER_ALL (
        terrain=Wog,Wwg
        [filter_adjacent_location]
            terrain=Wog,Wwg
            adjacent=se,nw
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Iwr
            adjacent=se,nw
        [/filter_adjacent_location]
    ) "Wwg,Wwg^Bw\"}
    {VRA_SCATTER_FILTER_ALL (
        terrain=Wog,Wwg
        [filter_adjacent_location]
            terrain=Wog,Wwg
            adjacent=sw,ne
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Iwr
            adjacent=sw,ne
        [/filter_adjacent_location]
    ) "Wwg,Wwg^Bw/"}
    {VRA_SCATTER_FILTER_ALL (
        terrain=Wog,Wwg
        [filter_adjacent_location]
            terrain=Wog,Wwg
            adjacent=s,n
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Iwr
            adjacent=s,n
        [/filter_adjacent_location]
    ) "Wwg,Wwg^Bw|"}
    [store_locations]
        terrain=Iwr
        variable=wcii.terrain_to_change
    [/store_locations]
    #    {FOREACH wcii.terrain_to_change ship_i}
    #        {RANDOM 0..1}
    #        [if]
    #            {VARIABLE_CONDITIONAL random equals 0}
    #            [then]
    #                [item]
    #                    x=$wcii.terrain_to_change[$ship_i].x
    #                    y=$wcii.terrain_to_change[$ship_i].y
    #                    image={IMG_DOCK_SHIP}
    #                [/item]
    #            [/then]
    #            [else]
    #                [item]
    #                    x=$wcii.terrain_to_change[$ship_i].x
    #                    y=$wcii.terrain_to_change[$ship_i].y
    #                    image={IMG_DOCK_SHIP_2}
    #                [/item]
    #            [/else]
    #        [/if]
    #    {NEXT ship_i}
    [terrain]
        terrain=Ds^Edt
        [and]
            terrain=Ds
            [filter_adjacent_location]
                terrain=Iwr
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    {VRA_SCATTER_FILTER_ALL (
        terrain=Ds
        [filter_adjacent_location]
            terrain=Iwr
        [/filter_adjacent_location]
    ) "Ds^Edt,Ds"}
    [terrain]
        terrain=Ds^Edt
        [and]
            terrain=W*
            [filter_adjacent_location]
                terrain=Iwr
            [/filter_adjacent_location]
            [filter_adjacent_location]
                terrain=W*^*
                count=0
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    ## some villages tweaks
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=M*^V*
    ) "*^Vd" 2 LAYER="overlay"}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=H*^Vhh
    ) "*^Vo" 2 LAYER="overlay"}
    [terrain]
        terrain=*^Ve
        layer=overlay
        [and]
            terrain=G*^Vh
            [filter_adjacent_location]
                terrain=G*^F*
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    [terrain]
        terrain=*^Vht
        layer=overlay
        [and]
            terrain=G*^Vh
            [filter_adjacent_location]
                terrain=R*^*,C*^*,K*^*
                count=0
            [/filter_adjacent_location]
            [filter_adjacent_location]
                terrain=Ss
                count=2-6
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    ## fix badlooking dunes
    [terrain]
        terrain=Hhd
        [and]
            terrain=Hd
            [filter_adjacent_location]
                terrain=D*^*,Rd^*
                count=0
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    ## expnad dock road
    [terrain]
        terrain=Rp
        [and]
            terrain=G*,Ds
            [filter_adjacent_location]
                terrain=*^Vl
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    ## contruction dirt near beach roads
    {VRA_SCATTER_FILTER_ALL (
        terrain=Ds
        [filter_adjacent_location]
            terrain=W*^*,G*^*,S*^*
            count=0
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Rp
        [/filter_adjacent_location]
    ) "Hd,Ds^Dr"}
    ## rebuild some swamps far from rivers
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Ss
        [not]
            terrain=Ww,Wwf
            radius=6
        [/not]
    ) "Gs,Ds,Ds" 8}
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Ss
        [not]
            terrain=Ww,Wwf
            radius=6
        [/not]
    ) "Gs^Fp,Hh^Fp,Hh,Mm,Gs^Fp,Ss^Uf,Ss^Uf,Ss^Uf" 8}
    ## some mushrooms on hills near river or caves
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Hh,Hh^F*
        [and]
            terrain=Ww,Wwf,U*^*
            radius=5
        [/and]
    ) "Hh^Uf" 14}
    ## reefs
    {VRA_SCATTER_FILTER_FRACTION (
        terrain=Wog
        [filter_adjacent_location]
            terrain=Wwg
        [/filter_adjacent_location]
        [not]
            terrain=*^Vl
            radius=7
        [/not]
    ) "Wwrg" 6}
    ## chance of expand rivers into sea
    {RANDOM 0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3}
    {REPEAT_IT $random river_i (
        [store_locations]
            terrain=Wog,Wwg,Wwrg
            [filter_adjacent_location]
                terrain=Ww,Wwf,Wo
            [/filter_adjacent_location]
            variable=wcii.terrain_to_change
        [/store_locations]
        [terrain]
            terrain=Ww
            find_in=wcii.terrain_to_change
            [and]
                terrain=Wwg
            [/and]
        [/terrain]
        [terrain]
            terrain=Wo
            find_in=wcii.terrain_to_change
            [and]
                terrain=Wog
            [/and]
        [/terrain]
        [terrain]
            terrain=Wwr
            find_in=wcii.terrain_to_change
            [and]
                terrain=Wwrg
            [/and]
        [/terrain]
    )}
    {WCT_MAP_REDUCE_CASTLE_EXPANDING_RECRUIT Chw Wwf}
    ## soft castle towards river defense
    {VRA_SCATTER_FILTER_PERCENTAGE (
        terrain=Ww
        [filter_adjacent_location]
            terrain=C*,K*
            count=0
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=W*^*
            count=2-6
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Ww
            [filter_adjacent_location]
                terrain=Ch,Kh
            [/filter_adjacent_location]
        [/filter_adjacent_location]
    ) "Chw" 83}
    {WCT_MARITIME_BRIDGES}
#enddef

#define WCT_ROADS_TO_DOCK_EVENTS
    [event]
        name=wct_store_roads_dock
        id=wct_store_roads_dock
        first_time_only=no
        [store_locations]
            terrain=!,W*^*
            [filter_adjacent_location]
                terrain=Iwr^Vl,Rp
                [not]
                    terrain=Ch*,Kh*^*,Re
                    radius=$radius
                    [filter_radius]
                        terrain=!,W*^*
                    [/filter_radius]
                [/not]
                [filter_adjacent_location]
                    terrain=Rp
                    [and]
                        terrain=Ch*,Kh*^*,Re
                        radius=$radius
                        [filter_radius]
                            terrain=!,W*^*
                        [/filter_radius]
                    [/and]
                    count=0
                [/filter_adjacent_location]
            [/filter_adjacent_location]
            [and]
                terrain=Ch*,Kh*^*,Re
                radius=$radius
                [filter_radius]
                    terrain=!,W*^*
                [/filter_radius]
            [/and]
            variable=wcii.terrain_to_change
        [/store_locations]
    [/event]
    {WCT_CREATE_EVENT_ROADS_TO dock Rp}
#enddef

#define WCT_ROADS_TO_RIVER_EVENTS
    [event]
        name=wct_store_roads_river
        id=wct_store_roads_river
        first_time_only=no
        [store_locations]
            terrain=!,W*^*
            [filter_adjacent_location]
                terrain=*^Vhc,Rp
                [not]
                    terrain=Ch*,Kh*^*,Re
                    radius=$radius
                    [filter_radius]
                        terrain=!,W*^*
                    [/filter_radius]
                [/not]
                [filter_adjacent_location]
                    terrain=Rp
                    [and]
                        terrain=Ch*,Kh*^*,Re
                        radius=$radius
                        [filter_radius]
                            terrain=!,W*^*
                        [/filter_radius]
                    [/and]
                    count=0
                [/filter_adjacent_location]
            [/filter_adjacent_location]
            [and]
                terrain=Ch*,Kh*^*,Re
                radius=$radius
                [filter_radius]
                    terrain=!,W*^*
                [/filter_radius]
            [/and]
            variable=wcii.terrain_to_change
        [/store_locations]
    [/event]
    {WCT_CREATE_EVENT_ROADS_TO river Rp}
#enddef

#define WCT_STORE_POSSIBLE_MARITIME_BRIDGE
    [store_locations]
        terrain=Ww
        [filter_adjacent_location]
            terrain=Chw
            adjacent=s,n
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Ch,Kh
            adjacent=s,n
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=*^B*
            count=0
        [/filter_adjacent_location]
        variable=bridge[0].location
    [/store_locations]
    [store_locations]
        terrain=Ww
        [filter_adjacent_location]
            terrain=Chw
            adjacent=se,nw
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Ch,Kh
            adjacent=se,nw
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=*^B*
            count=0
        [/filter_adjacent_location]
        variable=bridge[1].location
    [/store_locations]
    [store_locations]
        terrain=Ww
        [filter_adjacent_location]
            terrain=Chw
            adjacent=sw,ne
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Ch,Kh
            adjacent=sw,ne
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=*^B*
            count=0
        [/filter_adjacent_location]
        variable=bridge[2].location
    [/store_locations]
#enddef

#define WCT_MARITIME_BRIDGES
    {VARIABLE bridge[0].terrain[0].type Bsb|}
    {VARIABLE bridge[1].terrain[0].type Bsb\}
    {VARIABLE bridge[2].terrain[0].type Bsb/}
    {WCT_STORE_POSSIBLE_MARITIME_BRIDGE}
    [while]
        [variable]
            name=bridge[0].location.length
            greater_than=0
        [/variable]
        [or]
            [variable]
                name=bridge[1].location.length
                greater_than=0
            [/variable]
        [/or]
        [or]
            [variable]
                name=bridge[2].location.length
                greater_than=0
            [/variable]
        [/or]
        [do]
            [while]
                [not]
                    [variable]
                        name=selected.location.length
                        greater_than=0
                    [/variable]
                [/not]
                [do]
                    {RANDOM_INDEX bridge}
                    [if]
                        [variable]
                            name=bridge[$random].location.length
                            greater_than=0
                        [/variable]
                        [then]
                            {APPEND_TO selected bridge[$random]}
                        [/then]
                        [else]
                            {CLEAR_VARIABLE bridge[$random]}
                        [/else]
                    [/if]
                [/do]
            [/while]
            {RANDOM_INDEX selected.location}
            [terrain]
                terrain=Ww^$selected.terrain.type
                x=$selected.location[$random].x
                y=$selected.location[$random].y
            [/terrain]
            {CLEAR_VARIABLE selected}
            {WCT_STORE_POSSIBLE_MARITIME_BRIDGE}
        [/do]
    [/while]
    {CLEAR_VARIABLE bridge}
#enddef
