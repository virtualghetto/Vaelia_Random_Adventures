#textdomain wesnoth-Vaelia_Random_Adventures

# {NEAREST_HEX 20 20 29 (terrain=U*,R*) dest_hex}
# lifted from: Dead Water
# Finds the nearest hex to (X,Y) within MAX_DISTANCE that matches the FILTER, and stores the location in VARIABLE with x, y, and terrain. If there is more than one location found, VARIABLE will be an array.
#define NEAREST_HEX X Y MAX_DISTANCE_NUMBER FILTER VAR_NAME
    [set_variable]
        name=distance
        value=0
    [/set_variable]

    [set_variable]
        name=location_found
        value=no
    [/set_variable]

    # Store any matching locations within a radius of "distance". If nothing got stored, add one to "distance" and try again. Do this until a location is found, or "distance" goes over the MAX_DISTANCE_NUMBER.
    [while]
        [variable]
            name=location_found
            equals=no
        [/variable]
        [and]
            [variable]
                name=distance
                less_than_equal_to={MAX_DISTANCE_NUMBER}
            [/variable]
        [/and]

        [do]
            [store_locations]
                {FILTER}
                [and]
                    x={X}
                    y={Y}
                    radius=$distance
                [/and]
                variable={VAR_NAME}
            [/store_locations]

            [if]
                [variable]
                    name={VAR_NAME}.length
                    greater_than=0
                [/variable]
                [then]
                    [set_variable]
                        name=location_found
                        value=yes
                    [/set_variable]
                    [set_variable]
                        name={VAR_NAME}.distance
                        value=$distance
                    [/set_variable]
                [/then]
            [/if]

            [set_variable]
                name=distance
                add=1
            [/set_variable]
        [/do]
    [/while]

    [if]
        [variable]
            name=location_found
            equals=no
        [/variable]
        [then]
            [store_locations]
                {FILTER}
                [and]
                    x={X}
                    y={Y}
                [/and]
                variable={VAR_NAME}
            [/store_locations]
            [set_variable]
                name={VAR_NAME}.distance
                value=0
            [/set_variable]
        [/then]
    [/if]

    [clear_variable]
        name=distance
    [/clear_variable]

    [clear_variable]
        name=location_found
    [/clear_variable]
#enddef

# {WCT_ROADS_TO_VOID_EVENTS}
# {WCT_ITERATE_ROADS_TO void $dest_hex.distance}

#define WCT_ROADS_TO_VOID_EVENTS
    [event]
        name=wct_store_roads_void
        id=wct_store_roads_void
        first_time_only=no
        [store_locations]
            terrain=Xu
            [filter_adjacent_location]
                terrain=Ur,Xue,Xv
                [not]
                    terrain=Xue
                    radius=$radius
                    [filter_radius]
                        terrain=Xu,Ur,Xv,Xue
                    [/filter_radius]
                [/not]
                [filter_adjacent_location]
                    terrain=Ur
                    [and]
                        terrain=Xue
                        radius=$radius
                        [filter_radius]
                            terrain=Xu,Ur,Xv,Xue
                        [/filter_radius]
                    [/and]
                    count=0
                [/filter_adjacent_location]
            [/filter_adjacent_location]
            [and]
                terrain=Xue
                radius=$radius
                [filter_radius]
                    terrain=Xu,Ur,Xv,Xue
                [/filter_radius]
            [/and]
            variable=wcii.terrain_to_change
        [/store_locations]
    [/event]
    {WCT_CREATE_EVENT_ROADS_TO void Ur}
#enddef
